<?xml version="1.0" encoding="UTF-8"?>
<!--
  $HeadURL::                                                                             $
  $Id$

  Copyright (c) 2006 by Topaz, Inc.
  http://topazproject.org

  Licensed under the Educational Community License version 1.0
  http://opensource.org/licenses/ecl1.php
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.topazproject</groupId>
  <artifactId>topazproject-integrationtests</artifactId>
  <version>0.5-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>TopazProject Integration Test Framework</name>
  
  <parent>
    <groupId>org.topazproject</groupId>
    <artifactId>topazproject</artifactId>
    <version>0.5-SNAPSHOT</version>
  </parent>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    
    <!-- topazproject/libs -->
    <dependency>
      <groupId>org.topazproject</groupId>
      <artifactId>auth-helper</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject</groupId>
      <artifactId>conf-helper</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject</groupId>
      <artifactId>fedora-client</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject</groupId>
      <artifactId>filter-resolver</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject</groupId>
      <artifactId>jetty-jaas-cas</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject</groupId>
      <artifactId>tomcat-jaas-cas</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject</groupId>
      <artifactId>mulgara-client</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject</groupId>
      <artifactId>xacml-extensions</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject</groupId>
      <artifactId>resource-indexer</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>

    <!-- topazproject/webservices -->
    <!-- annotation -->
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-annotation-client-impl</artifactId>
      <version>0.1</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-annotation-webapp</artifactId>
      <type>war</type>
      <version>0.1</version>
    </dependency>
    <!-- articles -->
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-articles-api</artifactId>
      <version>0.1</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-articles-server</artifactId>
      <version>0.1</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-articles-client-impl</artifactId>
      <version>0.1</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-articles-webapp</artifactId>
      <type>war</type>
      <version>0.1</version>
    </dependency>
    <!-- users -->
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-users-core</artifactId>
      <version>0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-users-server</artifactId>
      <version>0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-users-client-impl</artifactId>
      <version>0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-users-webapp</artifactId>
      <type>war</type>
      <version>0.1-SNAPSHOT</version>
    </dependency>
    <!-- pap -->
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-pap-core</artifactId>
      <version>0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-pap-server</artifactId>
      <version>0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-pap-client-impl</artifactId>
      <version>0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-pap-webapp</artifactId>
      <type>war</type>
      <version>0.1-SNAPSHOT</version>
    </dependency>
    <!-- permissions -->
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-permissions-core</artifactId>
      <version>0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-permissions-server</artifactId>
      <version>0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-permissions-client-impl</artifactId>
      <version>0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-permissions-webapp</artifactId>
      <type>war</type>
      <version>0.1-SNAPSHOT</version>
    </dependency>
    <!-- alerts -->
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-alerts-core</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-alerts-server</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-alerts-client-impl</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-alerts-webapp</artifactId>
      <type>war</type>
      <version>0.5-SNAPSHOT</version>
    </dependency>
    <!-- journal-admin -->
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-journal-admin-core</artifactId>
      <version>0.1</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-journal-admin-server</artifactId>
      <version>0.1</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-journal-admin-client-impl</artifactId>
      <version>0.1</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-journal-admin-webapp</artifactId>
      <type>war</type>
      <version>0.1</version>
    </dependency>
    <!-- ratings -->
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-ratings-client-impl</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-ratings-webapp</artifactId>
      <type>war</type>
      <version>0.5-SNAPSHOT</version>
    </dependency>
  </dependencies>

  <properties>
    <!-- This is where the site-deploy phase will put the documentation -->
    <topazproject.site.url>file:///tmp/site/</topazproject.site.url>
  </properties>
  
  <distributionManagement>
    <site>
      <id>gandalf-docs</id>
      <url>${topazproject.site.url}</url>
    </site>
  </distributionManagement>
  
  <reporting>
    <plugins>
      
      <!-- TODO: This plugin seems to generate 0-data. Needs investigation -->
      <!-- <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <rulesets>
            <ruleset>/rulesets/basic.xml</ruleset>
          </rulesets>
        </configuration>
      </plugin> -->
      
      <!-- Java Cross-References (very nice!) -->
      <plugin>
        <artifactId>maven-jxr-plugin</artifactId>
      </plugin>
      
      <!-- Finds specific keywords in Java sources -->
      <!-- <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
        <configuration>
          <tags>
            <tag>TODO</tag>
            <tag>@todo</tag>
            <tag>@deprecated</tag>
            <tag>FIXME</tag>
            <tag>XXX</tag>
          </tags>
        </configuration>
      </plugin> -->
      
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <!-- <sourcepath>${project.build.directory}/generated-sources</sourcepath> -->
          <linksource>true</linksource>
          <stylesheet>maven</stylesheet>
          <show>private</show>
          <encoding>UTF-8</encoding>
          <charset>UTF-8</charset>
          <links>
            <link>http://java.sun.com/j2se/1.4.2/docs/api</link>
            <link>http://www.fedora.info/download/2.1.1/userdocs/server/serverdocs</link>
            <link>http://jakarta.apache.org/commons/configuration/apidocs</link>
            <link>http://tomcat.apache.org/tomcat-5.0-doc/catalina/docs/api</link>
            <link>http://sunxacml.sourceforge.net/javadoc</link>
            <link>http://gandalf.topazproject.org/kowari/api</link>
            <link>http://ws.apache.org/axis/java/apiDocs</link>
            <link>http://jakarta.apache.org/commons/logging/apidocs</link>
            <link>http://jrdf.sourceforge.net/0.3/doc/javadoc</link>
            <link>http://java.sun.com/j2ee/1.4/docs/api</link>
            <link>http://excalibur.apache.org/apidocs</link>
            <link>http://jakarta.apache.org/commons/email/api-release</link>
            <link>http://java.sun.com/products/javamail/javadocs</link>
            <link>http://quintanasoft.com/dumbster/javadoc</link>
          </links>
        </configuration>
      </plugin>
      
      <!-- TODO: Neeed to use our own style.xml - see target/checkstyle*.xml for ex -->
      <!-- <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin> -->

      <!-- changelog for past 2 weeks -->
      <!-- <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changelog-plugin</artifactId>
        <reportSets>
          <reportSet>
            <id>dual-report</id>
            <configuration>
              <type>range</type>
              <range>14</range>
            </configuration>
            <reports>
              <report>changelog</report>
              <report>file-activity</report>
              <report>dev-activity</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin> -->
      
    </plugins>
  </reporting>
  
  <build>
    
    <testResources>
      <!-- Resources from src/it/resources in entire project -->
      <testResource>
        <directory>target/generated-sources/src/it/resources</directory>
      </testResource>
      <!-- Resources from our src/it/resources -->
      <testResource>
        <directory>src/it/resources</directory>
      </testResource>
    </testResources>
    
    <plugins>

      <!-- Copy src/java so we can generate docs -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>pre-site</phase>
            <configuration>
              <tasks>
                <!-- todir should be ${project.build.directory}/generated-sources, but the
                     jxr, taglist (and probably other report modules) either ignore these,
                     ignore their sourcedir configuration option or don't have an option!
                     I've created a post-site phase to remove this directory. Ugly!
                     TODO: Fix once all reporting modules are fixed -->
                <copy todir="${basedir}">
                  <fileset dir="..">
                    <include name="**/*.java"/>
                    <include name="**/*.html"/>
                    <exclude name="**/samples/**"/>
                    <exclude name="**/*Test*"/>
                    <exclude name="**/target/**"/>
                  </fileset>
                  <regexpmapper from="^(.*)/src/main/(java|axis)/(.*)" to="src/main/java/\3"/>
                </copy>
                <!-- Hack to build javadocs for generated-sources for client APIs
                     Note this ONLY works if target/generated-sources directories already exist
                     from mvn install in ..
                     There is another hacky solution of re-running mvn in an exec task, but
                     doesn't seem worth it at this point -->
                <copy todir="${basedir}">
                  <fileset dir="..">
                    <include name="**/*client*/target/generated-sources/**"/>
                    <exclude name="**/alerts/**"/> <!-- Stuff I'm playing with right now -->
                  </fileset>
                  <regexpmapper from="^(.*)/target/generated-sources/(.*)" to="src/main/java/\2"/>
                </copy>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

          <execution>
            <id>clean-src</id>
            <!-- Should this be "clean" or "post-site"? -->
            <phase>clean</phase>
            <configuration>
              <tasks>
                <echo message="hello world"/>
                <delete dir="${basedir}/src/main/java"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

          <execution>
            <id>post-site-remove-src</id>
            <!-- Should this be "clean" or "post-site"? -->
            <phase>post-site</phase>
            <configuration>
              <tasks>
                <echo message="hello world"/>
                <delete dir="${basedir}/src/main/java"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
        
        <dependencies>
          <dependency>
            <groupId>ant</groupId>
            <artifactId>ant-apache-regexp</artifactId>
            <version>1.6.5</version>
            <scope>runtime</scope>
          </dependency>
          <dependency>
            <groupId>jakarta-regexp</groupId>
            <artifactId>jakarta-regexp</artifactId>
            <version>1.4</version>
          </dependency>
        </dependencies>
        
      </plugin>
      
      <!-- Copy head/topazproject/**/src/it/* to generated-sources/src/it
           (java test code and associated resources. beware of resource name collisions) -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <!-- May be better in pre-integration-test if plugins were executed in order -->
            <phase>generate-test-sources</phase>
            <goals><goal>run</goal></goals>
            <configuration>
              
              <tasks>
                <copy todir="${project.build.directory}/generated-sources">
                  <fileset dir="..">
                  </fileset>
                  <regexpmapper from="^(.*)/src/it/(.*)" to="src/it/\2"/>
                </copy>
              </tasks>
              
              <!-- Add generated-sources/src/it/java to the list of folders
                   containing sources to be compiled for testing. Use if ant
                   script generates test source code. -->
              <testSourceRoot>
                ${project.build.directory}/generated-sources/src/it/java
              </testSourceRoot>
              
            </configuration>
          </execution>
        </executions>

        <!-- Dependencies for antrun plugin -->
        <dependencies>
          <dependency>
            <groupId>ant</groupId>
            <artifactId>ant-apache-regexp</artifactId>
            <version>1.6.5</version>
            <scope>runtime</scope>
          </dependency>
          <!-- Required dependency for ant's copy's task use of regexpmapper -->
          <dependency>
            <groupId>jakarta-regexp</groupId>
            <artifactId>jakarta-regexp</artifactId>
            <version>1.4</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- Add src/it/java to source to be compiled -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-test-sources</phase>
            <goals><goal>add-test-source</goal></goals>
            <configuration>
              <sources><source>src/it/java</source></sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <!-- Since our packaging type is "pom", we have to add compiling specifically -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <phase>test-compile</phase>
            <goals><goal>testCompile</goal></goals>
          </execution>
        </executions>
      </plugin>

      <!-- handle our test resources -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-test-resources</phase>
            <goals><goal>testResources</goal></goals>
          </execution>
        </executions>
      </plugin>

      <!-- Load up our web-apps via cargo/jetty -->
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <configuration>
          <wait>false</wait>
          <container>
            <containerId>jetty4x</containerId>
            <type>embedded</type>
          </container>
          <configuration> 
            <home>${project.build.directory}/jetty</home>
            <properties>
              <cargo.servlet.port>9997</cargo.servlet.port>
              <cargo.logging>high</cargo.logging>
            </properties>
            <deployables>
              <deployable>
                <groupId>org.topazproject.ws</groupId>
                <artifactId>ws-articles-webapp</artifactId>
                <type>war</type>
              </deployable>
              <deployable>
                <groupId>org.topazproject.ws</groupId>
                <artifactId>ws-annotation-webapp</artifactId>
                <type>war</type>
              </deployable>
              <deployable>
                <groupId>org.topazproject.ws</groupId>
                <artifactId>ws-users-webapp</artifactId>
                <type>war</type>
              </deployable>
              <deployable>
                <groupId>org.topazproject.ws</groupId>
                <artifactId>ws-pap-webapp</artifactId>
                <type>war</type>
              </deployable>
              <deployable>
                <groupId>org.topazproject.ws</groupId>
                <artifactId>ws-permissions-webapp</artifactId>
                <type>war</type>
              </deployable>
              <deployable>
                <groupId>org.topazproject.ws</groupId>
                <artifactId>ws-alerts-webapp</artifactId>
                <type>war</type>
              </deployable>
              <deployable>
                <groupId>org.topazproject.ws</groupId>
                <artifactId>ws-journal-admin-webapp</artifactId>
                <type>war</type>
              </deployable>
              <deployable>
                <groupId>org.topazproject.ws</groupId>
                <artifactId>ws-ratings-webapp</artifactId>
                <type>war</type>
              </deployable>
            </deployables>
          </configuration> 
        </configuration> 
        <executions>
          <execution>
            <id>jetty-start</id>
            <phase>pre-integration-test</phase>
            <goals><goal>start</goal></goals>
          </execution>
          <!-- doesn't work properly (yet)
          <execution>
          <id>jetty-stop</id>
          <phase>post-integration-test</phase>
          <goals><goal>stop</goal></goals>
        </execution>
          -->
        </executions>
      </plugin>
      
      <!-- Use surefire to run integration tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <phase>integration-test</phase>
            <goals><goal>test</goal></goals>
          </execution>
        </executions>
      </plugin>
      
    </plugins>
  </build>
  
</project>
