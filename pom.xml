<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.topazproject</groupId>
  <artifactId>the-whole-shebang</artifactId>
  <version>0.8.2-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>All Plos and Topaz stuff</name>
  <!-- description is encouraged to take HTML embeded in CDATA -->
  <!-- Long descriptions break maven-jar-plugin and maven-war-plugin! MJAR-39.
  <description><![CDATA[
    Topaz is a new Open Source software applications
    development project to create an innovative, end-to-end electronic
    publishing system that will become a powerful driver of the Open
    Access movement.

    As an Open Source publishing framework, TOPAZ will serve the rapidly
    growing demand for sophisticated tools and resources to read and use the
    scientific and medical literature, allowing scholarly publishers, societies,
    universities, and research communities to publish open access journals
    economically and efficiently.

    TOPAZ will provide an incomparable resource for open access publishing
    generally and for the emerging open science movement enabling the
    transformation of scholarly publishing to an Open Access model in which
    the literature is freely and immediately available to anyone, anywhere, via
    the Internet, for innovative and creative uses, unfettered by financial or
    legal barriers.
  ]]></description>
  -->
  <description>PlosOne and Topaz Project</description>
  <url>http://www.topazproject.org</url>
  <organization>
    <name>Topaz</name>
    <url>http://www.topazproject.org</url>
  </organization>
  <licenses>
    <license>
      <name>Educational Community License version 1.0</name>
      <url>http://opensource.org/licenses/ecl1.php</url>
      <comments>Copyright (c) 2006 by Topaz, Inc.</comments>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <issueManagement>
    <system>trac</system>
    <url>http://gandalf.topazproject.org/trac</url>
  </issueManagement>
  <ciManagement>
    <system>continuum</system>
    <url>http://gandalf.topazproject.org/continuum</url>
  </ciManagement>

  <repositories>
    <repository>
      <id>topaz</id>
      <name>Maven 2 Repository for Topaz</name>
      <url>http://gandalf.topazproject.org/maven2</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>topaz</id>
      <name>Maven 2 Repository for Topaz</name>
      <url>http://gandalf.topazproject.org/maven2</url>
    </pluginRepository>
  </pluginRepositories>

  <scm>
    <developerConnection>scm:svn:http://gandalf.topazproject.org/svn/head/</developerConnection>
    <connection>scm:svn:http://gandalf.topazproject.org/svn/head/</connection>
    <url>http://gandalf.topazproject.org/svn/</url>
  </scm>

  <distributionManagement>
    <repository>
      <id>topaz</id>
      <url>http://gandalf.topazproject.org/maven2/</url>
    </repository>
  </distributionManagement>

  <modules>
    <module>build/ant-tasks-plugin</module>
    <module>mulgara</module>
    <module>fedora</module>
    <module>topaz</module>
    <module>plos</module>
    <module>packages</module>
  </modules>

  <properties>
    <topazproject.install.dir>${user.home}/topazproject-install</topazproject.install.dir>
    <maven.compiler.source>1.5</maven.compiler.source>
    <maven.compiler.target>1.5</maven.compiler.target>
    <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
    <!-- aggregate some documentation - javadocs & jxr -->
    <aggregate>true</aggregate>
    <spring.version>2.0.6</spring.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>2.4</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>javax.activation</groupId>
        <artifactId>activation</artifactId>
        <version>1.0.2</version>
      </dependency>

      <dependency>
        <groupId>javax.mail</groupId>
        <artifactId>mail</artifactId>
        <version>1.4</version>
      </dependency>

      <dependency>
        <groupId>axis</groupId>
        <artifactId>axis</artifactId>
        <version>1.4</version>
      </dependency>

      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.1</version>
        <exclusions>
          <exclusion>
            <groupId>avalon-framework</groupId>
            <artifactId>avalon-framework</artifactId>
          </exclusion>
          <exclusion>
            <groupId>logkit</groupId>
            <artifactId>logkit</artifactId>
          </exclusion>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>1.3.1</version>
      </dependency>

      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.3</version>
      </dependency>

      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>2.3</version>
      </dependency>

      <dependency>
        <groupId>commons-configuration</groupId>
        <artifactId>commons-configuration</artifactId>
        <version>1.4</version>
      </dependency>

      <dependency> <!-- It is important we get version 3.x to match commons-configuration -->
        <groupId>commons-collections</groupId>
        <artifactId>commons-collections</artifactId>
        <version>3.2</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy-all</artifactId>
        <version>1.1-rc-3</version>
      </dependency>

      <dependency>
        <groupId>cas</groupId>
        <artifactId>casclient</artifactId>
        <version>2.1.1</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>net.sf.saxon</groupId>
        <artifactId>saxon</artifactId>
        <version>8.7</version>
      </dependency>
      <dependency>
        <groupId>net.sf.saxon</groupId>
        <artifactId>saxon-dom</artifactId>
        <version>8.7</version>
      </dependency>
      <dependency>
        <groupId>net.sf.ehcache</groupId>
        <artifactId>ehcache</artifactId>
        <version>1.3.0-patch-1</version>
      </dependency>
      <dependency>
        <groupId>org.mulgara</groupId>
        <artifactId>mulgara</artifactId>
        <version>1.0.1-t1</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.mulgara</groupId>
        <artifactId>mulgara-lite</artifactId>
        <version>1.0.1-t1</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>info.fedora</groupId>
        <artifactId>fedora-client</artifactId>
        <version>2.1.1</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>info.fedora</groupId>
        <artifactId>fedora-server</artifactId>
        <version>2.1.1</version>
      </dependency>

      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty</artifactId>
        <version>6.1.4</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>freemarker</groupId>
        <artifactId>freemarker</artifactId>
        <version>2.3.8</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-mock</artifactId>
        <version>${spring.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>3.8.1</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>5.1</version>
        <scope>test</scope>
        <classifier>jdk15</classifier>
      </dependency>

     <dependency>
       <groupId>ant</groupId>
       <artifactId>ant-launcher</artifactId>
       <version>1.6.5</version>
     </dependency>

     <dependency>
       <groupId>ant</groupId>
       <artifactId>ant</artifactId>
       <version>1.6.5</version>
     </dependency>

     <dependency>
       <groupId>commons-cli</groupId>
       <artifactId>commons-cli</artifactId>
       <version>1.0</version>
     </dependency>

     <dependency>
       <groupId>jline</groupId>
       <artifactId>jline</artifactId>
       <version>0.9.9</version>
     </dependency>

     <dependency>
       <groupId>it.unibo.cs</groupId>
       <artifactId>unibo-xpointer</artifactId>
       <version>1.2-t1</version>
     </dependency>

     <dependency>
       <groupId>ant-contrib</groupId>
       <artifactId>ant-contrib</artifactId>
       <version>1.0b2</version>
     </dependency>

     <dependency>
       <groupId>org.codehaus.cargo</groupId>
       <artifactId>cargo-core-uberjar</artifactId>
       <version>0.9</version>
     </dependency>

     <dependency>
       <groupId>htmlunit</groupId>
       <artifactId>htmlunit</artifactId>
       <version>1.13</version>
       <scope>test</scope>
     </dependency>

     <dependency>
       <groupId>net.sourceforge.jwebunit</groupId>
       <artifactId>jwebunit-htmlunit-plugin</artifactId>
       <version>1.4.1</version>
       <scope>test</scope>
     </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact-ant</artifactId>
      <version>2.0.4</version>
    </dependency>
    
    <dependency>
      <groupId>tomcat</groupId>
      <artifactId>apache-tomcat</artifactId>
      <version>5.5.23</version>
      <type>zip</type>
    </dependency>

      <!-- Topaz Dependencies -->
      <dependency>
        <groupId>org.topazproject</groupId>
        <artifactId>auth-helper</artifactId>
        <version>${pom.version}</version>
      </dependency>
      <dependency>
        <groupId>org.topazproject</groupId>
        <artifactId>conf-helper</artifactId>
        <version>${pom.version}</version>
      </dependency>
      <dependency>
        <groupId>org.plosone</groupId>
        <artifactId>conf-helper</artifactId>
        <version>${pom.version}</version>
      </dependency>
      <dependency>
        <groupId>org.topazproject</groupId>
        <artifactId>fedora-client</artifactId>
        <version>${pom.version}</version>
      </dependency>
      <dependency>
        <groupId>org.topazproject</groupId>
        <artifactId>filter-resolver</artifactId>
        <version>${pom.version}</version>
      </dependency>
      <dependency>
        <groupId>org.topazproject</groupId>
        <artifactId>string-compare-resolver</artifactId>
        <version>${pom.version}</version>
      </dependency>
      <dependency>
        <groupId>org.topazproject</groupId>
        <artifactId>tomcat-jaas-cas</artifactId>
        <version>${pom.version}</version>
      </dependency>
      <dependency>
        <groupId>org.topazproject</groupId>
        <artifactId>mulgara-client</artifactId>
        <version>${pom.version}</version>
      </dependency>
      <dependency>
        <groupId>org.plosone</groupId>
        <artifactId>dom-ranges-helper</artifactId>
        <version>${pom.version}</version>
      </dependency>
      <dependency>
        <groupId>org.plosone</groupId>
        <artifactId>entity-resolver</artifactId>
        <version>${pom.version}</version>
      </dependency>
      <dependency>
        <groupId>org.topazproject</groupId>
        <artifactId>otm</artifactId>
        <version>${pom.version}</version>
      </dependency>
      <dependency>
        <groupId>org.topazproject</groupId>
        <artifactId>otm-extras</artifactId>
        <version>${pom.version}</version>
      </dependency>

      <!-- search -->
      <dependency>
        <groupId>org.topazproject.ws</groupId>
        <artifactId>ws-search-client-impl</artifactId>
        <version>${pom.version}</version>
      </dependency>
      <dependency>
        <groupId>org.topazproject.ws</groupId>
        <artifactId>topaz-lucene-impl</artifactId>
        <version>${pom.version}</version>
      </dependency>
      <dependency>
        <groupId>org.topazproject.ws</groupId>
        <artifactId>ws-search-webapp</artifactId>
        <version>${pom.version}</version>
        <type>war</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- Profiles Section: Define custom profiles here -->
  
  <profiles>

    <!-- it-helper: Integration-test helper - Turn on integration testing within modules -->

    <profile>
      <id>it-helper</id>

      <dependencies>
        <dependency>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
          <version>1.2.13</version>
          <scope>provided</scope>
        </dependency>
      </dependencies>
      
      <build>
        <!-- We're doing integration testing, so get test resources from appropriate location. -->
        <!-- XXX: Ideally we'd do this via configuration/resources in the maven-resourses-plugin,
             but there is a jira ticket open that this is broken, so we're mashing up resources
             for unit and integration testing. Be warned not to use different resources with
             identical names but differnt content in it/resources and test/resources! -->
        <testResources>
          <testResource>
            <directory>src/it/resources</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources</directory>
          </testResource>
        </testResources>

        <!-- This doesn't work in profiles (yet) - using build-helper-maven-plugin instead
        <testSourceDirectory>src/it/java</testSourceDirectory> -->

        <!-- XXX: Should some/all of this be inside the <pluginManagement> section?
             That would allow us to more easily modify integration-testing options in
             sub-modules (assuming integration testing is ever run directly in the
             sub-modules themselves).
             If we start running this profile across all sub-modules, this may give
             less trouble but will require entries in modules that want to run
             integration tests. -->
        
        <plugins>
          
          <!-- Add src/it/java to test-sources since <testSourceDirectory> does not work
               within profiles and because maven-compiler-plugin's testCompile goal ignores
               configuration/compileSourceRoots configuration -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>generate-test-sources</phase>
                <goals><goal>add-test-source</goal></goals>
                <configuration>
                  <sources><source>src/it/java</source></sources>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- Use surefire to run integration tests -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skip>true</skip>     <!-- don't run the tests in the test phase -->
            </configuration>
            <executions>
              <execution>
                <id>it-test</id>
                <phase>integration-test</phase>
                <goals><goal>test</goal></goals>
                <configuration>
                  <skip>false</skip><!-- instead, run the tests in the integration-test phase -->
                  <trimStackTrace>false</trimStackTrace>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- Blow away the target/test-classes directory so non it-helper builds don't
               get confused. (Would be better to build in it-classes (or move classes there
               when testing, but maven is so f**king broken as to make that impossible). -->
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <phase>post-integration-test</phase>
                <goals><goal>run</goal></goals>
                <configuration>
                  <tasks>
                    <jar destfile="${project.build.directory}/test-classes.jar"
                      basedir="${project.build.directory}/test-classes" />
                    <delete dir="${project.build.directory}/test-classes" />
                  </tasks>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
        </plugins>

        <!-- pluginManagement: Default plugin information to be made available for
             reference by modules derived from this one. This plugin configuration
             will not be resolved or bound to the lifecycle unless referenced. Any
             local configuration for a given plugin will override the plugin's
             entire definition here. -->
        
        <pluginManagement>
          <plugins>
            
            <!-- deploy for integration testing -->
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <version>0.3.1</version>
              <configuration>
                <wait>false</wait>
                <container>
                  <containerId>jetty4x</containerId>
                  <type>embedded</type>
                  <output>${project.build.directory}/jetty.log</output>
                  <log>${project.build.directory}/cargo.log</log>
                  <dependencies>
                    <dependency>
                      <groupId>log4j</groupId>
                      <artifactId>log4j</artifactId>
                    </dependency>
                    <dependency>
                      <location>${user.home}/.m2/topaz/container-classes</location>
                    </dependency>
                    <dependency>
                      <location>${basedir}/src/it/container-classes</location>
                    </dependency>
                  </dependencies>
                </container>
                <configuration> 
                  <home>${project.build.directory}/jetty</home>
                  <properties>
                    <cargo.servlet.port>9997</cargo.servlet.port>
                    <cargo.logging>high</cargo.logging>
                  </properties>
                  <deployables>
                    <deployable>
                      <groupId>${pom.parent.groupId}</groupId>
                      <artifactId>${pom.parent.artifactId}-webapp</artifactId>
                      <type>war</type>
                      <properties>
                        <context>${pom.parent.artifactId}</context>
                      </properties>
                    </deployable>
                  </deployables>
                </configuration>
              </configuration> 
              <executions>
                <execution>
                  <id>jetty-start</id>
                  <phase>pre-integration-test</phase>
                  <goals><goal>start</goal></goals>
                </execution>
                <execution>
                  <id>jetty-stop</id>
                  <phase>post-integration-test</phase>
                  <goals><goal>stop</goal></goals>
                </execution>
              </executions>
            </plugin>
          
          </plugins>
        </pluginManagement>
        
      </build>

    </profile>

    <!-- it-startenv: Start and stop fedora/ecqs/mulgara before and after integration testing -->
    
    <profile>
      <id>it-startenv</id>
      <dependencies>
        <dependency>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
          <version>1.2.13</version>
          <scope>provided</scope>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <!-- Run ant-tasks:ecqs/fedora/mulgara-start/stop around integration tests -->
          <plugin>
            <groupId>org.topazproject.plugins</groupId>
            <artifactId>ant-tasks</artifactId>
            <executions>
              <execution>
                <id>it-startenv-exe</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>ecqs-install</goal>
                  <goal>mulgara-install</goal>
                  <goal>fedora-install</goal>
                  <goal>search-install</goal>
                  <goal>ecqs-start</goal>
                  <goal>mulgara-start</goal>
                  <goal>fedora-start</goal>
                  <goal>search-start</goal>
                </goals>
                <configuration>
                  <SPAWN>true</SPAWN>      <!-- Spawn the start command -->
                  <fedora-version>2.1.1-t00802</fedora-version>
                  <ecqs-version>2.0.6-1-t00802</ecqs-version>
                </configuration>
              </execution>
              <execution>
                <id>it-stopenv-exe</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>ecqs-stop</goal>
                  <goal>fedora-stop</goal>
                  <goal>mulgara-stop</goal>
                  <goal>search-stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
  </profiles>
        
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>maven-jetty-plugin</artifactId>
          <version>6.1.4</version>
        </plugin>        

        <plugin>
          <groupId>org.topazproject.patch.plugin</groupId>
          <artifactId>axistools-maven-plugin</artifactId>
          <version>1.1-t1</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>axistools-maven-plugin</artifactId>
          <version>1.0</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <goals>deploy</goals>                           <!-- disable site deploy -->
          <useReleaseProfile>false</useReleaseProfile>    <!-- no javadoc and source jars -->
          <tagBase>http://gandalf.topazproject.org/svn/tags</tagBase>
          <preparationGoals>clean install</preparationGoals>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <trimStackTrace>false</trimStackTrace>
        </configuration>
      </plugin>
    </plugins>

    <defaultGoal>install</defaultGoal>
  </build>
</project>
