<?xml version="1.0" ?>
<project>

  <target name="exec-ext">
    <condition property="ext" value=".sh">
      <os family="unix"/>
    </condition>
    <condition property="ext" value=".bat">
      <os family="windows"/>
    </condition>
    <property name="ext" value=""/>
  </target>

  <target name="keytool">
    <condition property="keytool" value="keytool.exe">
      <os family="windows"/>
    </condition>
    <property name="keytool" value="keytool"/>
  </target>


  <target name="fedora-install" depends="exec-ext,keytool">
    <property name="FEDORA_JAR"
      value="${localRepository}/${fedora-groupId}/${fedora-artifactId}/${fedora-version}/${fedora-artifactId}-${fedora-version}.jar"/> 

    <property name="FEDORA_HOME"
      value="${FEDORA_INSTALL_DIR}/fedora-${fedora-version}"/>

    <mkdir dir="${FEDORA_INSTALL_DIR}"/>
    <unjar src="${FEDORA_JAR}" dest="${FEDORA_INSTALL_DIR}"/>
    <chmod perm="u+x">
      <fileset dir="${FEDORA_HOME}">
        <include name="**/bin/*"/>
      </fileset>
    </chmod>
    <exec dir="${FEDORA_HOME}"
      executable="${FEDORA_HOME}/server/bin/mckoi-init${ext}">
      <arg line="fedoraAdmin fedoraAdmin"/>
      <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
    </exec>
    <!-- install CAS server root cert in tomcat keystore -->
    <exec
      dir="${FEDORA_HOME}/server"
      executable="${keytool}">
      <arg line="-export -alias jakarta-tomcat -keystore ${ECQS_KEYSTORE} -file
        ecqs.cert"/>
    </exec>
    <exec
      dir="${FEDORA_HOME}/server"
      executable="${keytool}">
      <arg line="-import -alias jakarta-tomcat -keystore truststore -storepass
        tomcat -file ecqs.cert -noprompt"/>
    </exec>

    <delete file="${FEDORA_HOME}/server/ecqs.cert"/>
  </target>

  <target name="fedora-start" depends="exec-ext">
    <echo>Starting mckoi: FEDORA_HOME = ${FEDORA_HOME}</echo>
    <exec dir="${FEDORA_HOME}" 
      executable="${FEDORA_HOME}/server/bin/mckoi-start${ext}"
      spawn="true">
      <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
    </exec>

    <echo>Spawned off mckoi</echo>
    <!-- <sleep seconds="2"/> -->

    <echo>Starting fedora: FEDORA_HOME = ${FEDORA_HOME}</echo>
    <echo>You can safely hit Ctl-C to kill the mvn command after fedora starts</echo>
    <exec dir="${FEDORA_HOME}"
      executable="${FEDORA_HOME}/server/bin/fedora-start${ext}"
      spawn="false">
      <arg line="mckoi"/>
      <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
    </exec>
  </target>

  <target name="fedora-stop" depends="exec-ext">
    <echo>Stopping fedora: FEDORA_HOME = ${FEDORA_HOME}</echo>

    <exec dir="${FEDORA_HOME}" 
      executable="${FEDORA_HOME}/server/bin/fedora-stop${ext}">
      <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
    </exec>

    <echo>Stopping mckoi: FEDORA_HOME = ${FEDORA_HOME}</echo>

    <exec dir="${FEDORA_HOME}"
      executable="${FEDORA_HOME}/server/bin/mckoi-stop${ext}">
      <arg line="fedoraAdmin fedoraAdmin"/>
      <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
    </exec>
  </target>

  <target name="fedora-package" depends="exec-ext">
    <!-- untar fedora server distribution -->
    <untar src="${SRC_SERVER_TAR}" dest="${DEST_DIR}"/>

    <!-- untar fedora client distribution -->
    <untar src="${SRC_CLIENT_TAR}" dest="${DEST_DIR}"/>

    <!-- setup execute permissions for bin/* -->
    <chmod perm="u+x">
      <fileset dir="${DEST_DIR}">
        <include name="**/bin/*"/>
      </fileset>
    </chmod>

    <property name="FEDORA_HOME"
      value="${DEST_DIR}/fedora-${VERSION}"/>

    <property name="TOMCAT_HOME"
      value="${FEDORA_HOME}/server/${TOMCAT}"/>

    <!-- execute fedora-setup with no-ssl-authenticate-apim -->
    <exec
      dir="${FEDORA_HOME}"
      executable="${FEDORA_HOME}/server/bin/fedora-setup${ext}">
      <arg line="no-ssl-authenticate-apim"/>
      <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
    </exec>

    <!-- configure fedora (overwrite with our local copy) -->
    <copy file="server/fedora.fcfg"
      tofile="${FEDORA_HOME}/server/config/fedora.fcfg"
      overwrite="true"/>

    <!-- unzip the diringest service -->
    <unzip
      src="${SRC_DIRINGEST_ZIP}"
      dest="${FEDORA_HOME}">
    </unzip>

    <!-- unwar the diringest war file -->
    <unwar
      src="${FEDORA_HOME}/diringest-service/diringest.war"
      dest="${TOMCAT_HOME}/webapps/diringest/">
    </unwar>

    <!-- configure diringest (overwrite with our local copy) -->
    <copy file="diringest/diringest.properties"
      tofile="${TOMCAT_HOME}/webapps/diringest/WEB-INF/classes/diringest.properties"
      overwrite="true"/>

    <!-- configure CAS -->
    <copy file="CAS/CAS.properties"
      tofile="${TOMCAT_HOME}/server/classes/CAS.properties" overwrite="true"/>

    <copy file="CAS/jaas.config"
      tofile="${TOMCAT_HOME}/conf/jaas.config" overwrite="true"/>

    <!-- copy jar files for CAS-BASIC -->
    <copy file="${CAS_AUTHENTICATOR}" todir="${TOMCAT_HOME}/server/lib"
      overwrite="true" flatten="true"/>

    <copy file="${CAS_CLIENT}" todir="${TOMCAT_HOME}/server/lib"
      overwrite="true" flatten="true"/>

    <!-- make an entry for CAS-BASIC in catalina.jar -->
    <mkdir dir="${TOMCAT_HOME}/catalina-jar-edit"/>
    <unjar src="${TOMCAT_HOME}/server/lib/catalina.jar"
      dest="${TOMCAT_HOME}/catalina-jar-edit"/>
    <echo
      file="${TOMCAT_HOME}/catalina-jar-edit/org/apache/catalina/startup/Authenticators.properties"
      append ="yes"
      message="CAS-BASIC=org.topazproject.tomcat.catalina.authenticator.CASBasicAuthenticator"
      />
    <jar destfile="${TOMCAT_HOME}/server/lib/catalina.jar"
      basedir="${TOMCAT_HOME}/catalina-jar-edit"/>

    <delete dir="${TOMCAT_HOME}/catalina-jar-edit"/>

    <!-- replace BASIC auth with CAS-BASIC -->
    <xslt basedir="${TOMCAT_HOME}/webapps" destdir="${TOMCAT_HOME}/web-xml-temp"
      includes="**/web.xml" style="CAS/web-xml-convert.xslt" extension=".xml"/>

    <copy todir="${TOMCAT_HOME}/webapps" overwrite="yes">
      <fileset dir="${TOMCAT_HOME}/web-xml-temp"/>
    </copy>

    <delete dir="${TOMCAT_HOME}/web-xml-temp"/>

    <!-- enable SOAP access to Kowari/Mulgara -->
    <xslt basedir="${TOMCAT_HOME}/webapps/fedora/WEB-INF" destdir="${TOMCAT_HOME}/mulgara-temp"
      includes="web.xml" style="mulgara/web-xml-convert.xslt" extension=".xml"/>
    <xslt basedir="${TOMCAT_HOME}/webapps/fedora/WEB-INF" destdir="${TOMCAT_HOME}/mulgara-temp"
      includes="server-config.wsdd" style="mulgara/server-config-convert.xslt" extension=".wsdd"/>

    <copy todir="${TOMCAT_HOME}/webapps/fedora/WEB-INF" overwrite="yes">
      <fileset dir="${TOMCAT_HOME}/mulgara-temp"/>
    </copy>

    <delete dir="${TOMCAT_HOME}/mulgara-temp"/>

    <copy todir="${FEDORA_HOME}/server/fedora-internal-use/deploy" overwrite="true">
      <fileset dir="server/deploy"/>
    </copy>

    <!-- copy resource-indexer -->
    <copy todir="${TOMCAT_HOME}/webapps/fedora/WEB-INF/lib" overwrite="true" flatten="true" 
      file="${RESOURCE_INDEXER}"/>
    
    <!-- jar everything up and overwrite the package target created by maven -->
    <jar destfile="${DEST_DIR}.jar" basedir="${DEST_DIR}"/>
  </target>
</project>
