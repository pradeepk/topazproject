<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2006-2008 by Topaz, Inc.
  http://topazproject.org
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<beans default-autowire="byName"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

  <!--Ambra developer beans here -->
  <bean id="fetchArticleService" class="org.plos.article.service.FetchArticleService">
    <property name="articleAnnotationService" ref="articleAnnotationService"/>
    <property name="encodingCharset" ref="defaultEncodingCharset"/>
    <property name="articleXmlUtils" ref="articleXmlUtils"/>
  </bean>

  <bean id="articleXmlUtils" class="org.plos.util.ArticleXMLUtils" init-method="init">
    <property name="articleRep" value="XML"/>
    <property name="xslTemplate" value="/viewnlm-v2.xsl"/>
    <property name="xmlFactoryProperty" ref="xmlFactoryProperties"/>
    <property name="articleService" ref="articleOtmService"/>
  </bean>

  <bean id="citationService" class="org.plos.util.ArticleXMLUtils" init-method="init">
    <property name="articleRep" value="XML"/>
    <property name="xslTemplate" value="/citation.xsl"/>
    <property name="xmlFactoryProperty" ref="xmlFactoryProperties"/>
    <property name="articleService" ref="articleOtmService"/>
  </bean>

  <bean id="secondaryObjectService" class="org.plos.util.ArticleXMLUtils" init-method="init">
    <property name="articleRep" value="XML"/>
    <property name="xslTemplate" value="/objInfo.xsl"/>
    <property name="xmlFactoryProperty" ref="xmlFactoryProperties"/>
    <property name="articleService" ref="articleOtmService"/>
  </bean>


  <util:map id="xmlFactoryProperties">
<!--       <entry key="javax.xml.transform.TransformerFactory"
           value="com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl"/>-->
    <entry key="javax.xml.transform.TransformerFactory"
               value="net.sf.saxon.TransformerFactoryImpl"/>
    <entry key="javax.xml.transform.Transformer"
            value="net.sf.saxon.Controller"/>
  </util:map>

  <!-- TODO: Update the servicePort url's automatically using maven build process itself-->
  <bean id="articleOtmService" class="org.plos.article.service.ArticleOtmService">
 <!--   <property name="smallImageRep" value="TIF"/>
    <property name="mediumImageRep" value="TIF"/>
    <property name="largeImageRep" value="TIF"/>
    -->
    <property name="smallImageRep" value="PNG_S"/>
    <property name="mediumImageRep" value="PNG_M"/>
    <property name="largeImageRep" value="PNG_L"/>
   </bean>

   <bean id="crossRefPosterService" class="org.plos.admin.service.CrossRefPosterService">
    <!-- following is the URL for the CrossRef service. The three parameters which should be set are
        * area=  test or live. Decides if the cross ref is actually 'posted'. area=test for testing, area=live for deployment
        * login_id=crossref user name
        * login_passwd=crossref user password
    -->
    <property name="doiXrefUrl" value="${ambra.services.crossref.post.url}"/>
  </bean>

  <bean id="flagManagementService" class="org.plos.admin.service.FlagManagementService"/>

  <bean id="documentManagementService" class="org.plos.admin.service.DocumentManagementService">
    <!-- These pathnames are absolute -->
    <property name="documentDirectory" value="${ambra.services.documentManagement.ingestSourceDir}"/>
    <property name="ingestedDocumentDirectory" value="${ambra.services.documentManagement.ingestDestinationDir}"/>
    <property name="documentPrefix" value="${ambra.services.documentManagement.documentPrefix}"/>
    <!-- Whereas this is relative to webapp/src/main/resources  -->
    <property name="xslTemplate" value="/crossref.xsl"/>
    <property name="plosDoiUrl" value="${ambra.services.crossref.plos.doiurl}"/>
    <property name="plosEmail" value="${ambra.services.crossref.plos.email}"/>
    <property name="sendToXref" value="${ambra.services.crossref.sendToXref}"/>
  </bean>

  <bean id="defaultEncodingCharset" class="java.lang.String">
    <constructor-arg value="UTF-8"/>
  </bean>

  <bean id="applicationId" class="java.lang.String">
    <constructor-arg value="topaz-ambra"/>
  </bean>

  <bean id="userContext" class="org.plos.web.UserContext"/>

  <bean id="permissionsService" class="org.plos.permission.service.PermissionsService"/>

  <bean id="annotationConverter" class="org.plos.annotation.service.AnnotationConverter"/>

  <bean id="replyService" class="org.plos.annotation.service.ReplyService">
    <property name="applicationId" ref="applicationId"/>
    <property name="encodingCharset" ref="defaultEncodingCharset"/>
    <property name="defaultType" value="http://www.w3.org/2001/12/replyType#Comment"/>
    <property name="permissionsService" ref="permissionsService"/>
  </bean>

  <bean id="articleAnnotationService" class="org.plos.annotation.service.ArticleAnnotationService">
    <property name="articleAnnotationCache" ref="articleAnnotationCache"/>
    <property name="applicationId" ref="applicationId"/>
    <property name="encodingCharset" ref="defaultEncodingCharset"/>
    <property name="defaultType" value="http://www.w3.org/2000/10/annotationType#Comment"/>
    <property name="permissionsService" ref="permissionsService"/>
  </bean>

  <bean id="ratingsService" class="org.plos.rating.service.RatingsService">
    <property name="applicationId" ref="applicationId"/>
  </bean>

  <bean id="annotationService" class="org.plos.annotation.service.AnnotationService">
    <property name="converter" ref="annotationConverter"/>
    <property name="replyService" ref="replyService"/>
    <property name="permissionsService" ref="permissionsService"/>
  </bean>

  <bean id="userService" class="org.plos.user.service.UserService">
    <property name="userContext" ref="userContext"/>
    <property name="permissionsService" ref="permissionsService"/>
    <property name="userCache" ref="userCache"/>
    <property name="applicationId" ref="applicationId"/>
    <property name="emailAddressUrl" value="${ambra.services.cas.url.base}/email?guid="/>
    <property name="weeklyCategories">
      <list>
        <value>biology</value>
        <value>clinical_trials</value>
        <value>computational_biology</value>
        <value>genetics</value>
        <value>medicine</value>
        <value>pathogens</value>
        <value>plosntds</value>
        <value>plosone</value>
      </list>
    </property>
    <property name="monthlyCategories">
      <list>
        <value>biology</value>
        <value>clinical_trials</value>
        <value>computational_biology</value>
        <value>genetics</value>
        <value>medicine</value>
        <value>pathogens</value>
        <value>plosntds</value>
        <value>plosone</value>
      </list>
    </property>
    <property name="categoryNames">
      <map>
        <entry key="biology" value="PLoS Biology"/>
        <entry key="computational_biology" value="PLoS Computational Biology"/>
        <entry key="clinical_trials" value="PLoS Hub for Clinical Trials"/>
        <entry key="genetics" value="PLoS Genetics"/>
        <entry key="medicine" value="PLoS Medicine"/>
        <entry key="pathogens" value="PLoS Pathogens"/>
        <entry key="plosntds" value="PLoS Neglected Tropical Diseases"/>
        <entry key="plosone" value="PLoS ONE"/>
      </map>
    </property>
  </bean>

  <bean id="profanityCheckingService" class="org.plos.util.ProfanityCheckingService">
    <property name="profaneWords" ref="profaneWords"/>
  </bean>

  <bean id="browseService" class="org.plos.article.service.BrowseService">
    <property name="browseCache" ref="browseCache"/>
  </bean>

  <!-- Add all your constants to the map with a key and a value/ref -->
  <util:map id="otherConstants" map-class="java.util.HashMap">
    <entry key="countries" value-ref="countries"/>
  </util:map>

  <bean id="searchService" class="org.plos.search.service.SearchService">
    <property name="searchWebService" ref="searchWebService"/>
    <property name="searchCache" ref="searchCache"/>
  </bean>

  <bean id="searchWebService" class="org.plos.search.service.SearchWebService"/>

  <bean id="journalService" class="org.plos.journal.JournalService" init-method="init"/>

  <!-- OTM setups -->
  <bean name="fedoraBlobStore" class="org.topazproject.fedora.otm.FedoraBlobStore">
    <constructor-arg index="0" value="${ambra.topaz.blobStore.fedora.uri}"/>
    <constructor-arg index="1" value="${ambra.topaz.blobStore.fedora.userName}"/>
    <constructor-arg index="2" value="${ambra.topaz.blobStore.fedora.password}"/>
  </bean>
  <bean name="simpleBlobStore" class="org.topazproject.otm.stores.SimpleBlobStore">
    <constructor-arg index="0" value="${java.io.tmpdir}/blob-store"/>
  </bean>
  <bean id="otmFactory" class="org.plos.configuration.OtmConfiguration">
    <constructor-arg index="0" value="${ambra.topaz.tripleStore.mulgara.itql.uri}" />
    <constructor-arg index="1">
     <!-- must be one of fedoraBlobStore or simpleBlobStore -->
       <ref bean="${ambra.topaz.blobStore.beanName}"/>
    </constructor-arg>
    <property name="fedoraBlobFactories">
      <list>
        <bean name="annotationFedoraBlobFactory" 
            class="org.plos.models.support.fedora.AnnotationFedoraBlobFactory"/>
        <bean name="representationFedoraBlobFactory" 
            class="org.plos.models.support.fedora.RepresentationFedoraBlobFactory"/>
      </list>
    </property>
    <property name="models">
      <list>
        <bean class="org.topazproject.otm.ModelConfig">
          <constructor-arg index="0" value="ri" />
          <constructor-arg index="1" value="${ambra.models.ri}"/>
          <constructor-arg index="2" value="${ambra.models.ri[@type]}"/>
        </bean>
        <bean class="org.topazproject.otm.ModelConfig">
          <constructor-arg index="0" value="annotations" />
          <constructor-arg index="1" value="${ambra.models.annotations}"/>
          <constructor-arg index="2" value="${ambra.models.annotations[@type]}"/>
        </bean>
        <bean class="org.topazproject.otm.ModelConfig">
          <constructor-arg index="0" value="users" />
          <constructor-arg index="1" value="${ambra.models.users}"/>
          <constructor-arg index="2" value="${ambra.models.users[@type]}"/>
        </bean>
        <bean class="org.topazproject.otm.ModelConfig">
          <constructor-arg index="0" value="grants" />
          <constructor-arg index="1" value="${ambra.models.grants}"/>
          <constructor-arg index="2" value="${ambra.models.grants[@type]}"/>
        </bean>
        <bean class="org.topazproject.otm.ModelConfig">
          <constructor-arg index="0" value="revokes" />
          <constructor-arg index="1" value="${ambra.models.revokes}"/>
          <constructor-arg index="2" value="${ambra.models.revokes[@type]}"/>
        </bean>
        <bean class="org.topazproject.otm.ModelConfig">
          <constructor-arg index="0" value="pp" />
          <constructor-arg index="1" value="${ambra.models.pp}"/>
          <constructor-arg index="2" value="${ambra.models.pp[@type]}"/>
        </bean>
        <bean class="org.topazproject.otm.ModelConfig">
          <constructor-arg index="0" value="preferences" />
          <constructor-arg index="1" value="${ambra.models.preferences}"/>
          <constructor-arg index="2" value="${ambra.models.preferences[@type]}"/>
        </bean>
        <bean class="org.topazproject.otm.ModelConfig">
          <constructor-arg index="0" value="profiles" />
          <constructor-arg index="1" value="${ambra.models.profiles}"/>
          <constructor-arg index="2" value="${ambra.models.profiles[@type]}"/>
        </bean>
        <bean class="org.topazproject.otm.ModelConfig">
          <constructor-arg index="0" value="ratings" />
          <constructor-arg index="1" value="${ambra.models.ratings}"/>
          <constructor-arg index="2" value="${ambra.models.ratings[@type]}"/>
        </bean>
        <bean class="org.topazproject.otm.ModelConfig">
          <constructor-arg index="0" value="alerts" />
          <constructor-arg index="1" value="${ambra.models.alerts}"/>
          <constructor-arg index="2" value="${ambra.models.alerts[@type]}"/>
        </bean>
        <bean class="org.topazproject.otm.ModelConfig">
          <constructor-arg index="0" value="criteria" />
          <constructor-arg index="1" value="${ambra.models.criteria}"/>
          <constructor-arg index="2" value="${ambra.models.criteria[@type]}"/>
        </bean>
        <bean class="org.topazproject.otm.ModelConfig">
          <constructor-arg index="0" value="str" />
          <constructor-arg index="1" value="${ambra.models.str}"/>
          <constructor-arg index="2" value="${ambra.models.str[@type]}"/>
        </bean>
        <bean class="org.topazproject.otm.ModelConfig">
          <constructor-arg index="0" value="xsd" />
          <constructor-arg index="1" value="${ambra.models.xsd}"/>
          <constructor-arg index="2" value="${ambra.models.xsd[@type]}"/>
        </bean>
        <bean class="org.topazproject.otm.ModelConfig">
          <constructor-arg index="0" value="prefix" />
          <constructor-arg index="1" value="${ambra.models.prefix}"/>
          <constructor-arg index="2" value="${ambra.models.prefix[@type]}"/>
        </bean>
      </list>
    </property>

    <property name="aliases">
      <map>
        <entry key="id" value="${ambra.aliases.id}"/>
      </map>
    </property>

    <property name="preloadClasses">
      <list>
        <value>org.plos.models.Aggregation</value>
        <value>org.plos.models.Annotation</value>
        <value>org.plos.models.Annotea</value>
        <value>org.plos.models.Article</value>
        <value>org.plos.models.AuthenticationId</value>
        <value>org.plos.models.Category</value>
        <value>org.plos.models.Citation</value>
        <value>org.plos.models.Comment</value>
        <value>org.plos.models.Correction</value>
        <value>org.plos.models.FormalCorrection</value>
        <value>org.plos.models.MinorCorrection</value>
        <value>org.plos.models.DublinCore</value>
        <value>org.plos.models.EditorialBoard</value>
        <value>org.plos.models.FoafPerson</value>
        <value>org.plos.models.Issue</value>
        <value>org.plos.models.Journal</value>
        <value>org.plos.models.License</value>
        <value>org.plos.models.ObjectInfo</value>
        <value>org.plos.models.PermissionsPropagator</value>
        <value>org.plos.models.PLoS</value>
        <value>org.plos.models.Rating</value>
        <value>org.plos.models.RatingContent</value>
        <value>org.plos.models.RatingSummary</value>
        <value>org.plos.models.RatingSummaryContent</value>
        <value>org.plos.models.RelatedArticle</value>
        <value>org.plos.models.Reply</value>
        <value>org.plos.models.ReplyThread</value>
        <value>org.plos.models.Representation</value>
        <value>org.plos.models.Trackback</value>
        <value>org.plos.models.TrackbackContent</value>
        <value>org.plos.models.UserAccount</value>
        <value>org.plos.models.UserPreference</value>
        <value>org.plos.models.UserPreferences</value>
        <value>org.plos.models.UserProfile</value>
        <value>org.plos.models.UserRole</value>
        <value>org.plos.models.Volume</value>
        <value>org.plos.models.Blob</value>
        <value>org.plos.models.AnnotationBlob</value>
        <value>org.plos.models.ReplyBlob</value>
        <value>org.plos.model.article.CitationInfo</value>
        <value>org.plos.model.UserProfileInfo</value>
        <value>org.plos.model.article.ArticleInfo</value>
        <value>org.plos.model.article.NewArtInfo</value>
        <value>org.plos.model.article.RelatedArticleInfo</value>
        <value>org.topazproject.otm.criterion.Conjunction</value>
        <value>org.topazproject.otm.criterion.Criterion</value>
        <value>org.topazproject.otm.criterion.DetachedCriteria</value>
        <value>org.topazproject.otm.criterion.Disjunction</value>
        <value>org.topazproject.otm.criterion.EQCriterion</value>
        <value>org.topazproject.otm.criterion.ExistsCriterion</value>
        <value>org.topazproject.otm.criterion.GECriterion</value>
        <value>org.topazproject.otm.criterion.GTCriterion</value>
        <value>org.topazproject.otm.criterion.LECriterion</value>
        <value>org.topazproject.otm.criterion.LTCriterion</value>
        <value>org.topazproject.otm.criterion.MinusCriterion</value>
        <value>org.topazproject.otm.criterion.NECriterion</value>
        <value>org.topazproject.otm.criterion.NotCriterion</value>
        <value>org.topazproject.otm.criterion.NotExistsCriterion</value>
        <value>org.topazproject.otm.criterion.Order</value>
        <value>org.topazproject.otm.criterion.Parameter</value>
        <value>org.topazproject.otm.criterion.TransCriterion</value>
        <value>org.topazproject.otm.criterion.WalkCriterion</value>
      </list>
    </property>
  </bean>

  <bean id="otmSessionFactory" factory-bean="otmFactory" factory-method="getFactory"/>

  <bean id="otmSession" factory-bean="otmSessionFactory" factory-method="openSession"
      destroy-method="close" scope="request">
    <constructor-arg index="0">
       <ref bean="otmInterceptor"/>
    </constructor-arg>
    <aop:scoped-proxy proxy-target-class="false"/>
  </bean>

  <!-- Set up Transaction-Manager stuff -->
  <bean id="txManager" class="org.topazproject.otm.spring.OtmTransactionManager">
    <property name="otmSession" ref="otmSession"/>
    <property name="defaultTimeout" value="600"/>
    <property name="clearSessionOnRollback" value="true"/>
    <property name="skipFlushOnReadonlyTx" value="true"/>
  </bean>

  <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>

  <!-- cache manager configs -->
  <bean id="txCacheManagerFactory" class="org.plos.cache.CacheManagerFactory">
    <constructor-arg index="0">
       <ref bean="otmSessionFactory"/>
    </constructor-arg>
  </bean>
  <bean id="txCacheManager"
      factory-bean="txCacheManagerFactory" factory-method="createCacheManager">
    <constructor-arg index="0" value="20"/> <!-- seconds to wait for the write lock -->
  </bean>
  <bean id="objectCache" class="org.plos.cache.EhcacheProvider">
    <constructor-arg index="0">
       <ref bean="txCacheManager"/>
    </constructor-arg>
    <constructor-arg index="1">
       <ref bean="objectEhcache"/>
    </constructor-arg>
  </bean>
  <bean id="repCache" class="org.plos.cache.EhcacheProvider">
    <constructor-arg index="0">
       <ref bean="txCacheManager"/>
    </constructor-arg>
    <constructor-arg index="1">
       <ref bean="repEhcache"/>
    </constructor-arg>
  </bean>
  <bean id="otmInterceptor" class="org.plos.cache.OtmInterceptor">
    <constructor-arg index="0">
       <ref bean="txCacheManager"/>
    </constructor-arg>
    <constructor-arg index="1">
       <ref bean="objectCache"/>
    </constructor-arg>
    <constructor-arg index="2">
       <ref bean="repCache"/>
    </constructor-arg>
    <constructor-arg index="3">
       <ref bean="journalService"/>
    </constructor-arg>
  </bean>
  <bean id="browseCache" class="org.plos.cache.EhcacheProvider">
    <constructor-arg index="0">
       <ref bean="txCacheManager"/>
    </constructor-arg>
    <constructor-arg index="1">
       <ref bean="browseEhcache"/>
    </constructor-arg>
  </bean>
  <bean id="userCache" class="org.plos.cache.EhcacheProvider">
    <constructor-arg index="0">
       <ref bean="txCacheManager"/>
    </constructor-arg>
    <constructor-arg index="1">
       <ref bean="userEhcache"/>
    </constructor-arg>
  </bean>
  <bean id="feedCache" class="org.plos.cache.EhcacheProvider">
    <constructor-arg index="0">
       <ref bean="txCacheManager"/>
    </constructor-arg>
    <constructor-arg index="1">
       <ref bean="feedEhcache"/>
    </constructor-arg>
  </bean>
  <bean id="searchCache" class="org.plos.cache.EhcacheProvider">
    <constructor-arg index="0">
       <ref bean="txCacheManager"/>
    </constructor-arg>
    <constructor-arg index="1">
       <ref bean="searchEhcache"/>
    </constructor-arg>
  </bean>
  <bean id="articleAnnotationCache" class="org.plos.cache.EhcacheProvider">
    <constructor-arg index="0">
       <ref bean="txCacheManager"/>
    </constructor-arg>
    <constructor-arg index="1">
       <ref bean="articleAnnotationEhcache"/>
    </constructor-arg>
  </bean>
  <bean id="journalCache" class="org.plos.cache.EhcacheProvider">
    <constructor-arg index="0">
       <ref bean="txCacheManager"/>
    </constructor-arg>
    <constructor-arg index="1">
       <ref bean="journalEhcache"/>
    </constructor-arg>
  </bean>
  <bean id="carrierCache" class="org.plos.cache.EhcacheProvider">
    <constructor-arg index="0">
       <ref bean="txCacheManager"/>
    </constructor-arg>
    <constructor-arg index="1">
       <ref bean="carrierEhcache"/>
    </constructor-arg>
  </bean>
  
  <!-- freemarker configs -->
  <bean id="plosOneFreemarkerManager" class="org.plos.struts2.PlosOneFreemarkerManager">
    <constructor-arg index="0">
      <ref bean="plosOneFreemarkerConfig" />
    </constructor-arg>
  </bean>

  <bean id="plosOneFreemarkerConfig" class="org.plos.struts2.PlosOneFreemarkerConfig" />

  <!-- Caches -->
  <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
    <property name="configLocation" value="classpath:ehcache.xml"/>
    <property name="shared" value="true"/>
  </bean>

  <bean id="journalEhcache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
    <property name="cacheName" value="Journals"/>
  </bean>

  <bean id="carrierEhcache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
    <property name="cacheName" value="ArticleCarriers"/>
  </bean>

  <bean id="articleAnnotationEhcache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
    <property name="cacheName">
      <value>ArticleAnnotationCache</value>
    </property>
  </bean>

  <bean id="userEhcache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
    <property name="cacheName">
      <value>UserCache</value>
    </property>
  </bean>

  <bean id="browseEhcache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
    <property name="cacheName" value="BrowseCache"/>
  </bean>

  <bean id="feedEhcache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
    <property name="cacheName" value="FeedCache"/>
  </bean>

  <bean id="searchEhcache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
    <property name="cacheName" value="SearchCache"/>
  </bean>

  <bean id="objectEhcache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
    <property name="cacheName" value="ObjectCache"/>
  </bean>

  <bean id="repEhcache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
    <property name="cacheName" value="RepresentationCache"/>
  </bean>

  <bean id="virtualJournalMappingFilterCache"
    class="org.springframework.cache.ehcache.EhCacheFactoryBean">
    <property name="cacheName">
      <value>VirtualJournalMappingFilter</value>
    </property>
  </bean>

  <!-- JMX exporting -->
  <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
    <property name="locateExistingServerIfPossible" value="true"/>
  </bean>

  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"
        value="net.sf.ehcache.management.ManagementService.registerMBeans"/>
    <property name="arguments">
      <list>
        <ref bean="cacheManager"/>
        <ref bean="mbeanServer"/>
        <value>true</value>
        <value>true</value>
        <value>true</value>
        <value>true</value>
      </list>
    </property>
  </bean>

  <bean class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
    <property name="autodetect" value="true"/>
  </bean>

  <bean name="org.plos.logging:name=log4j" class="org.apache.log4j.jmx.HierarchyDynamicMBean"/>

  <!-- email configuration -->
  <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <property name="host" value="${ambra.network.hosts.mailhost}"/>
  </bean>

  <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
    <property name="templateLoaderPath" value="/WEB-INF/emailTemplates/"/>
    <property name="defaultEncoding" ref="defaultEncodingCharset"/>
  </bean>

  <bean id="plosoneMailer" class="org.plos.service.PlosoneMailer">
    <property name="mailSender" ref="mailSender"/>
    <property name="fromEmailAddress" value="application@plosone.org"/>
    <property name="freeMarkerConfigurer" ref="freemarkerConfig"/>
    <property name="feedbackEmailMap">
      <map>
        <entry key="text" value="feedback-text.ftl"/>
        <entry key="html" value="feedback-html.ftl"/>
        <entry key="subject" value="My feedback for PLoS ONE"/>
        <entry key="toEmailAddress" value="${ambra.platform.email.feedback}"/>
      </map>
    </property>
    <property name="emailThisArticleMap">
      <map>
        <entry key="text" value="emailThisArticle-text.ftl"/>
        <entry key="html" value="emailThisArticle-html.ftl"/>
        <entry key="url" value="${ambra.services.crossref.plos.doiurl}"/>
        <entry key="subject" value="An Article from "/>
      </map>
    </property>
  </bean>

</beans>
