<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.plosone</groupId>
  <artifactId>${pom.parent.artifactId}-webapp</artifactId>
  <packaging>war</packaging>
  <version>0.5-SNAPSHOT</version>
  <name>PLoS ONE Web Application</name>

  <parent>
    <groupId>org.plosone</groupId>
    <artifactId>plosone</artifactId>
    <relativePath>../pom.xml</relativePath>
    <version>0.5-SNAPSHOT</version>
  </parent>

  <dependencies>
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jetty</artifactId>
      <version>6.0.0rc0</version>
    </dependency>
    <dependency>
      <groupId>freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>2.3.8</version>
    </dependency>
    <dependency>
      <groupId>uk.ltd.getahead</groupId>
      <artifactId>dwr</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>cas</groupId>
      <artifactId>casclient</artifactId>
      <version>2.1.1</version>
    </dependency>

    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-articles-client-impl</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-users-client-impl</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-pap-client-impl</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>org.topazproject</groupId>
      <artifactId>topaz-common</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-annotation-client-impl</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>org.topazproject.ws</groupId>
      <artifactId>ws-permissions-client-impl</artifactId>
      <version>0.5-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>aopalliance</groupId>
      <artifactId>aopalliance</artifactId>
      <version>1.0</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.9</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>2.0-rc2</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>2.0-rc2</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>2.0-rc2</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>2.0-rc2</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>2.0-rc2</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-mock</artifactId>
      <version>2.0-rc3</version>
      <scope>test</scope>
    </dependency>

    <!-- needed for scoping support in spring IOC -->
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <version>2.1_3</version>
    </dependency>

    <dependency>
      <groupId>opensymphony</groupId>
      <artifactId>webwork</artifactId>
      <version>2.2.4</version>
    </dependency>

    <dependency>
      <groupId>opensymphony</groupId>
      <artifactId>xwork-tiger</artifactId>
      <version>1.1.3</version>
    </dependency>

    <dependency>
      <groupId>opensymphony</groupId>
      <artifactId>xwork</artifactId>
      <version>1.2.1</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.4</version>
      <scope>provided</scope>
    </dependency>

    <!-- required by the xsl transformation using translets -->
    <dependency>
      <groupId>org.apache.bcel</groupId>
      <artifactId>bcel</artifactId>
      <version>5.2</version>
    </dependency>

   </dependencies>

    
  <!--
    <modules>
    <module>../topazproject/webservices/articles/ws-client-impl</module>
    <module>../topazproject/webservices/annotations/ws-client-impl</module>
    </modules>
  -->

  <build>
    <!--
      <testResources>
      <testResource>
      <directory>/src/main/resources</directory>
      <includes>
      <include>**</include>
      </includes>
      </testResource>
      <testResource>
      <directory>/src/test/resources</directory>
      <includes>
      <include>**</include>
      </includes>
      </testResource>
      </testResources>
    -->

    <finalName>plosone</finalName>
    <plugins>
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <configuration>
          <locales>en</locales>
        </configuration>
      </plugin>

      <!-- Compiler -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>

      <!--
        mvn clean jetty:run to run the webapp.
        ecqs should also be installed and running first
        
        To enable remote debug on port 4000
        export MAVEN_OPTS="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=4000,server=y,suspend=n"
        
        If you supply suspend=n instead of suspend=y you can start immediately without running the debugger and launch the debugger at anytime you really wish to debug.
      -->
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <version>6.0.0rc0</version>
        <configuration>
          <connectors>
            <connector implementation="org.mortbay.jetty.security.SslSocketConnector">
              <port>8443</port>
              <maxIdleTime>30000</maxIdleTime>
              <!-- 
                Using the cert generated by esup-cas-quick-start for localhost here.
                Change the keystore and passwords if using a different machine for CAS or if you 
                want to generate your own certificate.  The cert needs to be imported into the 
                local machine's trusted store first (e.g. keytool -import -trustcacerts \
                -alias jakarta-tomcat -storepass changeit \
                -file ~/topazproject-install/esup-cas-quick-start-2.0.6-1/tmp/cert.pkcs7 \
                -keystore $JAVA_HOME/jre/lib/security/cacerts) Path to cacerts depends if you 
                are using JDK or JRE
              -->
              <keystore>
                ${topazproject.install.dir}/esup-cas-quick-start-2.0.6-1/jakarta-tomcat-5.0.28/conf/server.ks
              </keystore>
              <password>secret</password>
              <keyPassword>secret</keyPassword>
            </connector>
            <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
              <port>8080</port>
              <maxIdleTime>30000</maxIdleTime>
              <acceptors>10</acceptors>
            </connector>
          </connectors>
          <!--           <jettyConfig>C:\cygwin\opt\jetty-6.0.0beta14\etc\jetty.xml</jettyConfig>-->
          <systemProperties>
            <systemProperty>
              <name>org.apache.commons.logging.Log</name>
              <value>org.apache.commons.logging.impl.Log4JLogger</value>
            </systemProperty>
          </systemProperties>
          <scanIntervalSeconds>5</scanIntervalSeconds>
          <webDefaultXml>src/main/resources/webdefault.xml</webDefaultXml>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip><!-- disable tests by default until we get a DB up or mock objects -->
        </configuration>
      </plugin>

    </plugins>
  </build>
</project>
