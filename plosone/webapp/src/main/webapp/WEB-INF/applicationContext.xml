<?xml version="1.0" encoding="UTF-8"?>
<!--
  - Copyright (c) 2006 by Topaz, Inc.
  - http://topazproject.org
  -
  - Licensed under the Educational Community License version 1.0
  - http://opensource.org/licenses/ecl1.php
  -->
<beans default-autowire="byName"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

  <import resource="propertyConfigurer.xml"/>

  <!--Plosone developer beans here -->
  <bean id="fetchArticleService" class="org.plos.article.service.FetchArticleService" scope="session" init-method="init">
    <property name="articleRep" value="XML"/>
    <!-- Note: remember to prefix the filename with a "/" -->
    <property name="secondaryObjectXslTemplate" value="/objInfo.xsl"/>
    <property name="xslTemplate" value="/viewnlm-v2.xsl"/>
    <property name="xmlFactoryProperty" ref="xmlFactoryProperties"/>
    <property name="articleService" ref="articleWebService"/>
    <property name="annotationWebService" ref="annotationWebService"/>
    <property name="useTranslet" value="true"/>
    <property name="encodingCharset" ref="defaultEncodingCharset"/>
    <aop:scoped-proxy/>
  </bean>

  <util:map id="xmlFactoryProperties">
<!--       <entry key="javax.xml.transform.TransformerFactory"
           value="com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl"/>-->
    <entry key="javax.xml.transform.TransformerFactory"
               value="net.sf.saxon.TransformerFactoryImpl"/>
    <entry key="javax.xml.transform.Transformer"
            value="net.sf.saxon.Controller"/>
  </util:map>

  <!-- TODO: Update the servicePort url's automatically using maven build process itself-->
  <bean id="articleWebService" class="org.plos.article.service.ArticleWebService" scope="session">
    <property name="userContext" ref="userContext"/>
    <property name="configurationMap">
      <map>
        <entry key="uri" value="${service.article}"/>
        <entry key="auth-method" value-ref="auth-method"/>
      </map>
    </property>
 <!--   <property name="smallImageRep" value="TIF"/>
    <property name="mediumImageRep" value="TIF"/>
    <property name="largeImageRep" value="TIF"/>
    -->
    <property name="smallImageRep" value="PNG_S"/>
    <property name="mediumImageRep" value="PNG_M"/>
    <property name="largeImageRep" value="PNG_L"/>
    <aop:scoped-proxy/>
   </bean>
   
   <bean id="crossRefPosterService" class="org.plos.admin.service.CrossRefPosterService">
    <!-- following is the URL for the CrossRef service. The three parameters which should be set are
    	* area=  test or live. Decides if the cross ref is actually 'posted'. area=test for testing, area=live for deployment
    	* login_id=crossref user name
    	* login_passwd=crossref user password
    -->
    <property name="doiXrefUrl" value="${crossref.post.url}"/>      
  </bean>

  <bean id="flagManagementService" class="org.plos.admin.service.FlagManagementService"/>
       
  <bean id="documentManagementService" class="org.plos.admin.service.DocumentManagementService" scope="session">
  	<!-- These pathnames are absolute -->
    <property name="documentDirectory" value="${ingest.source}"/>
    <property name="ingestedDocumentDirectory" value="${ingest.destination}"/>
  	<!-- Whereas this is relative to webapp/src/main/resources  -->
    <property name="xslTemplate" value="/crossref.xsl"/>      
    <property name="articleCacheAdministrator" ref="articleCacheAdministrator"/>
    <property name="plosDoiUrl" value="${crossref.plos.doiurl}"/>      
    <property name="plosEmail" value="${crossref.plos.email}"/>      
    <property name="sendToXref" value="${crossref.sendToXref}"/>      
    <aop:scoped-proxy/>    
  </bean>
  
  <bean id="defaultEncodingCharset" class="java.lang.String">
    <constructor-arg value="UTF-8"/>
  </bean>

  <bean id="applicationId" class="java.lang.String">
    <constructor-arg value="topaz-plosone"/>
  </bean>

  <bean id="auth-method" class="java.lang.String">
    <constructor-arg value="CAS"/>
    <!--<constructor-arg value="TEST"/>-->
  </bean>

  <bean id="userContext" class="org.plos.web.UserContext" scope="session">
    <aop:scoped-proxy/>
  </bean>

  <bean id="permissionWebService" class="org.plos.permission.service.PermissionWebService" scope="session">
    <property name="userContext" ref="userContext"/>
    <property name="configurationMap">
      <map>
        <entry key="uri" value="${service.permission}"/>
        <entry key="auth-method" value-ref="auth-method"/>
      </map>
    </property>
    <aop:scoped-proxy/>
  </bean>

  <bean id="lazyLoaderFactory" class="org.plos.annotation.service.AnnotationLazyLoaderFactory"/>

  <bean id="annotationConverter" class="org.plos.annotation.service.AnnotationConverter" scope="session">
    <property name="lazyLoaderFactory" ref="lazyLoaderFactory"/>
    <aop:scoped-proxy/>
  </bean>

  <bean id="replyWebService" class="org.plos.annotation.service.ReplyWebService" scope="session">
    <property name="userContext" ref="userContext"/>
    <property name="applicationId" ref="applicationId"/>
    <property name="encodingCharset" ref="defaultEncodingCharset"/>
    <property name="defaultType" value="http://www.w3.org/2001/12/replyType#Comment"/>
    <property name="configurationMap">
      <map>
        <entry key="uri" value="${service.reply}"/>
        <entry key="auth-method" value-ref="auth-method"/>
      </map>
    </property>
    <aop:scoped-proxy/>
  </bean>

  <bean id="annotationWebService" class="org.plos.annotation.service.AnnotationWebService" scope="session">
    <property name="userContext" ref="userContext"/>
    <property name="articleCacheAdministrator" ref="articleCacheAdministrator"/>
    <property name="applicationId" ref="applicationId"/>
    <property name="encodingCharset" ref="defaultEncodingCharset"/>
    <property name="defaultType" value="http://www.w3.org/2000/10/annotationType#Annotation"/>
    <property name="configurationMap">
      <map>
        <entry key="uri" value="${service.annotation}"/>
        <entry key="auth-method" value-ref="auth-method"/>
      </map>
    </property>
    <aop:scoped-proxy/>
  </bean>

  <bean id="annotationService" class="org.plos.annotation.service.AnnotationService" scope="session">
    <property name="userContext" ref="userContext"/>
    <property name="converter" ref="annotationConverter"/>
    <property name="replyWebService" ref="replyWebService"/>
    <property name="permissionWebService" ref="permissionWebService"/>
    <aop:scoped-proxy/>
  </bean>

  <bean id="userWebService" class="org.plos.user.service.UserWebService" scope="session">
    <property name="userContext" ref="userContext"/>
    <property name="applicationId" ref="applicationId"/>
    <property name="configurationMap">
      <map>
        <entry key="uri" value="${service.user-account}"/>
        <entry key="auth-method" value-ref="auth-method"/>
      </map>
    </property>
    <aop:scoped-proxy/>
  </bean>

  <bean id="userRoleWebService" class="org.plos.user.service.UserRoleWebService" scope="session">
    <property name="userContext" ref="userContext"/>
    <property name="configurationMap">
      <map>
        <entry key="uri" value="${service.user-role}"/>
        <entry key="auth-method" value-ref="auth-method"/>
      </map>
    </property>
    <aop:scoped-proxy/>
  </bean>

  <bean id="preferencesWebService" class="org.plos.user.service.PreferencesWebService" scope="session">
    <property name="userContext" ref="userContext"/>
    <property name="configurationMap">
      <map>
        <entry key="uri" value="${service.preference}"/>
        <entry key="auth-method" value-ref="auth-method"/>
      </map>
    </property>
    <aop:scoped-proxy/>
  </bean>
  
  <bean id="profileWebService" class="org.plos.user.service.ProfileWebService" scope="session">
    <property name="userContext" ref="userContext"/>
    <property name="configurationMap">
      <map>
        <entry key="uri" value="${service.profile}"/>
        <entry key="auth-method" value-ref="auth-method"/>
      </map>
    </property>
    <aop:scoped-proxy/>
  </bean>

  <bean id="userService" class="org.plos.user.service.UserService" scope="session">
    <property name="userContext" ref="userContext"/>
    <property name="userWebService" ref="userWebService"/>
    <property name="userRoleWebService" ref="userRoleWebService"/>
    <property name="profileWebService" ref="profileWebService"/>
    <property name="permissionWebService" ref="permissionWebService"/>
    <property name="preferencesWebService" ref="preferencesWebService"/>
    <property name="userCacheAdministrator" ref="userCacheAdministrator"/>
    <property name="applicationId" ref="applicationId"/>
    <property name="emailAddressUrl" value="https://${server.cas}/cas/email?guid="/>
    <property name="weeklyCategories">
      <list>
        <value>plosone</value>
        <value>biology</value>
        <value>clinical_trials</value>
        <value>computational_biology</value>
        <value>genetics</value>
        <value>medicine</value>
        <value>pathogens</value>
      </list>
    </property>
    <property name="monthlyCategories">
      <list>
        <value>plosone</value>
        <value>biology</value>
        <value>clinical_trials</value>
        <value>computational_biology</value>
        <value>genetics</value>
        <value>medicine</value>
        <value>pathogens</value>
      </list>
    </property>
    <property name="categoryNames">
      <map>
        <entry key="plosone" value="PLoS One"/>
        <entry key="biology" value="PLoS Biology"/>
        <entry key="computational_biology" value="PLoS Computational Biology"/>
        <entry key="clinical_trials" value="PLoS Clinical Trials"/>
        <entry key="genetics" value="PLoS Genetics"/>
        <entry key="medicine" value="PLoS Medicine"/>
        <entry key="pathogens" value="PLoS Pathogens"/>
      </map>
    </property>
    <aop:scoped-proxy/>
  </bean>

  <bean id="profanityCheckingService" class="org.plos.util.ProfanityCheckingService">
    <property name="profaneWords">
      <list>
        <value>ass</value>
        <value>ass lick</value>
        <value>asses</value>
        <value>asshole</value>
        <value>assholes</value>
        <value>asskisser</value>
        <value>asswipe</value>
        <value>bastard</value>
        <value>beastial</value>
        <value>beastiality</value>
        <value>beastility</value>
        <value>belly whacker</value>
        <value>bestiality</value>
        <value>bitcher</value>
        <value>bitchers</value>
        <value>bitchin</value>
        <value>bitching</value>
        <value>blow job</value>
        <value>blowjob</value>
        <value>blowjobs</value>
        <value>bonehead</value>
        <value>boner</value>
        <value>browntown</value>
        <value>bucket cunt</value>
        <value>bull shit</value>
        <value>bullshit</value>
        <value>bung hole</value>
        <value>butt breath</value>
        <value>butt fucker</value>
        <value>butt hair</value>
        <value>buttface</value>
        <value>buttfuck</value>
        <value>buttfucker</value>
        <value>butthole</value>
        <value>buttpicker</value>
        <value>circle jerk</value>
        <value>clit</value>
        <value>cobia</value>
        <value>cocksuck </value>
        <value>cocksucked </value>
        <value>cocksucker</value>
        <value>cocksucking</value>
        <value>cocksucks</value>
        <value>cooter</value>
        <value>cum</value>
        <value>cummer</value>
        <value>cumming</value>
        <value>cums</value>
        <value>cumshot</value>
        <value>cunt</value>
        <value>cuntlick</value>
        <value>cuntlicker</value>
        <value>cuntlicking</value>
        <value>cunts</value>
        <value>cyberfuc</value>
        <value>cyberfuck</value>
        <value>cyberfucked</value>
        <value>cyberfucker</value>
        <value>cyberfuckers</value>
        <value>cyberfucking</value>
        <value>dildo</value>
        <value>dildos</value>
        <value>dink</value>
        <value>dinks</value>
        <value>dipshit</value>
        <value>dong</value>
        <value>douche bag</value>
        <value>dumbass</value>
        <value>fag</value>
        <value>fagget</value>
        <value>fagging</value>
        <value>faggit</value>
        <value>faggot</value>
        <value>faggs</value>
        <value>fagot</value>
        <value>fagots</value>
        <value>fags</value>
        <value>fatass</value>
        <value>fatso</value>
        <value>fingerfuck</value>
        <value>fingerfucked</value>
        <value>fingerfucker</value>
        <value>fingerfuckers</value>
        <value>fingerfucking</value>
        <value>fingerfucks</value>
        <value>fistfuck</value>
        <value>fistfucked</value>
        <value>fistfucker</value>
        <value>fistfuckers</value>
        <value>fistfucking</value>
        <value>fistfuckings</value>
        <value>fistfucks</value>
        <value>fuck</value>
        <value>fucked</value>
        <value>fucker</value>
        <value>fuckers</value>
        <value>fuckin</value>
        <value>fucking</value>
        <value>fuckings</value>
        <value>fuckme</value>
        <value>fucks</value>
        <value>fuk</value>
        <value>fuks</value>
        <value>furburger</value>
        <value>gangbang</value>
        <value>gangbanged </value>
        <value>gangbangs</value>
        <value>gaysex</value>
        <value>gazongers</value>
        <value>goddamn</value>
        <value>gook</value>
        <value>guinne</value>
        <value>hard on</value>
        <value>hardcoresex</value>
        <value>horniest</value>
        <value>hotsex</value>
        <value>hussy</value>
        <value>jack off</value>
        <value>jacking off</value>
        <value>jackoff</value>
        <value>jack off</value>
        <value>jack-off</value>
        <value>jap</value>
        <value>jerk off</value>
        <value>jerk-off</value>
        <value>jism</value>
        <value>jiz</value>
        <value>jizm</value>
        <value>jizz</value>
        <value>kike</value>
        <value>kock</value>
        <value>kondum</value>
        <value>kondums</value>
        <value>kraut</value>
        <value>kum</value>
        <value>kummer</value>
        <value>kumming</value>
        <value>kums</value>
        <value>kunilingus</value>
        <value>lesbo</value>
        <value>mothafuck</value>
        <value>mothafucka</value>
        <value>mothafuckas</value>
        <value>mothafuckaz</value>
        <value>mothafucked</value>
        <value>mothafucker</value>
        <value>mothafuckers</value>
        <value>mothafuckin</value>
        <value>mothafucking</value>
        <value>mothafuckings</value>
        <value>mothafucks</value>
        <value>motherfuck</value>
        <value>motherfucked</value>
        <value>motherfucker</value>
        <value>motherfuckers</value>
        <value>motherfuckin</value>
        <value>motherfucking</value>
        <value>motherfuckings</value>
        <value>motherfucks</value>
        <value>nigger</value>
        <value>niggers</value>
        <value>orgasim</value>
        <value>orgasims</value>
        <value>phonesex</value>
        <value>phuk</value>
        <value>phuked</value>
        <value>phuking</value>
        <value>phukked</value>
        <value>phukking</value>
        <value>phuks</value>
        <value>phuq</value>
        <value>pimp</value>
        <value>pisser</value>
        <value>pissers</value>
        <value>pisses</value>
        <value>pissin</value>
        <value>pissoff</value>
        <value>pornos</value>
        <value>pussys</value>
        <value>schlong</value>
        <value>sheister</value>
        <value>shit</value>
        <value>shited</value>
        <value>shitfull</value>
        <value>shiting</value>
        <value>shitings</value>
        <value>shits</value>
        <value>shitted</value>
        <value>shitter</value>
        <value>shitters</value>
        <value>shitting</value>
        <value>shittings</value>
        <value>shitty</value>
        <value>slut</value>
        <value>sluts</value>
        <value>twat</value>
        <value>wetback</value>
        <value>whore</value>
        <value>wop</value>
      </list>
    </property>
  </bean>

  <bean id="searchService" class="org.plos.search.service.SearchService" scope="session">
    <property name="snippetsMax" value="3"/>
    <property name="fieldMaxLength" value="50"/>
    <property name="indexName" value="TopazIndex"/>
    <property name="resultPageXslt" value="copyXml"/>
    <property name="searchWebService" ref="searchWebService"/>
    <aop:scoped-proxy/>
  </bean>

  <bean id="searchWebService" class="org.plos.search.service.SearchWebService" scope="session">
    <property name="configurationMap">
      <map>
        <entry key="uri" value="${service.search}"/>
        <entry key="auth-method" value-ref="auth-method"/>
      </map>
    </property>
    <aop:scoped-proxy/>
  </bean>

  <bean id="plosOneFreemarkerManager" class="org.plos.webwork.PlosOneFreemarkerManager">
    <constructor-arg index="0">
      <ref bean="plosOneFreemarkerConfig" />
    </constructor-arg>      
  </bean>
  
  <bean id="plosOneFreemarkerConfig" class="org.plos.webwork.PlosOneFreemarkerConfig" />
  
  <bean id="userCacheAdministrator" class="com.opensymphony.oscache.general.GeneralCacheAdministrator" destroy-method="destroy">
    <constructor-arg index="0">
      <props>
        <prop key="cache.memory">true</prop>
<!--         <prop key="cache.persistence.class">com.opensymphony.oscache.plugins.diskpersistence.HashDiskPersistenceListener</prop> -->
      </props>
    </constructor-arg>
  </bean>
<!-- store articles and annotations -->
  <bean id="articleCacheAdministrator" class="com.opensymphony.oscache.general.GeneralCacheAdministrator" destroy-method="destroy">
     <constructor-arg index="0">
       <props>
         <prop key="cache.memory">true</prop>
         <prop key="cache.event.listeners">com.opensymphony.oscache.plugins.clustersupport.JavaGroupsBroadcastingListener</prop>
 <!--    <prop key="cache.capacity">500</prop>-->
       </props>
     </constructor-arg>
  </bean>

  <!-- email configuration -->
  <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <property name="host" value="${mailhost}"/>
  </bean>

  <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
    <property name="templateLoaderPath" value="/WEB-INF/emailTemplates/"/>
    <property name="defaultEncoding" ref="defaultEncodingCharset"/>
  </bean>

  <bean id="plosoneMailer" class="org.plos.service.PlosoneMailer">
    <property name="mailSender" ref="mailSender"/>
    <property name="fromEmailAddress" value="application@plosone.org"/>
    <property name="freeMarkerConfigurer" ref="freemarkerConfig"/>
    <property name="feedbackEmailMap">
      <map>
        <entry key="text" value="feedback-text.ftl"/>
        <entry key="html" value="feedback-html.ftl"/>
        <entry key="subject" value="My feedback for PLoS ONE"/>
        <entry key="toEmailAddress" value="${email.feedback}"/>
      </map>
    </property>
    <property name="emailThisArticleMap">
      <map>
        <entry key="text" value="emailThisArticle-text.ftl"/>
        <entry key="html" value="emailThisArticle-html.ftl"/>
        <entry key="url" value="http://${homesite}/article/fetchArticle.action?articleURI"/>
        <entry key="subject" value="An Article from PLoS ONE"/>
      </map>
    </property>
  </bean>

</beans>
