<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
    version="2.4">

  <display-name>PLoS ONE</display-name>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>/WEB-INF/propertyConfigurer.xml /WEB-INF/countryList.xml /WEB-INF/profaneWords.xml /WEB-INF/applicationContext.xml</param-value>
  </context-param>

  <filter>
    <filter-name>Member Session</filter-name>
    <filter-class>org.plos.web.InitializeSessionOnLoginFilter</filter-class>
  </filter>

<!--
  <filter>
    <filter-name>DebuggingFilter</filter-name>
    <filter-class>org.plos.web.DebuggingFilter</filter-class>
  </filter>
-->

  <filter>
    <filter-name>CAS Filter</filter-name>
    <filter-class>org.plos.cas.client.filter.CASFilterWrapper</filter-class>
    <init-param>
      <param-name>edu.yale.its.tp.cas.client.filter.loginUrl</param-name>
      <param-value>https://localhost:7443/cas/login</param-value>
    </init-param>
    <init-param>
      <param-name>edu.yale.its.tp.cas.client.filter.validateUrl</param-name>
      <param-value>https://localhost:7443/cas/proxyValidate</param-value>
    </init-param>
    <init-param>
      <param-name>edu.yale.its.tp.cas.client.filter.serverName</param-name>
      <param-value>localhost:8080</param-value>
    </init-param>
    <init-param>
      <param-name>edu.yale.its.tp.cas.client.filter.proxyCallbackUrl</param-name>
      <param-value>https://localhost:10443/plosone-webapp/CasProxyServlet</param-value>
    </init-param>
    <init-param>
      <param-name>edu.yale.its.tp.cas.client.filter.wrapRequest</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>

  <filter>
    <filter-name>webwork</filter-name>
    <filter-class>com.opensymphony.webwork.dispatcher.FilterDispatcher</filter-class>
  </filter>

  <filter>
    <filter-name>CacheFilter</filter-name>
    <filter-class>com.opensymphony.oscache.web.filter.CacheFilter</filter-class>
    <init-param>
        <param-name>time</param-name>
        <param-value>-1</param-value>
    </init-param>
    <init-param>
        <param-name>scope</param-name>
        <param-value>application</param-value>
    </init-param>
  </filter>



<!--
  <filter-mapping >
    <filter-name>DebuggingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
-->

  <filter-mapping>
    <filter-name>CAS Filter</filter-name>
<!-- <url-pattern>/*</url-pattern>-->
    <url-pattern>/annotation/secure/*</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>CAS Filter</filter-name>
    <url-pattern>/user/secure/*</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>CAS Filter</filter-name>
    <url-pattern>/admin/*</url-pattern>
  </filter-mapping>

  <filter-mapping >
    <filter-name>Member Session</filter-name>
    <url-pattern>/annotation/secure/*</url-pattern>
  </filter-mapping>

  <filter-mapping >
    <filter-name>Member Session</filter-name>
    <url-pattern>/user/secure/*</url-pattern>
  </filter-mapping>

  <filter-mapping >
    <filter-name>Member Session</filter-name>
    <url-pattern>/admin/*</url-pattern>
  </filter-mapping>


  <filter-mapping>
    <filter-name>CacheFilter</filter-name>
    <url-pattern>/article/fetchAnnotatedArticle.action</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>CacheFilter</filter-name>
    <url-pattern>/article/fetchObject.action</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>webwork</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <listener>
    <listener-class>org.plos.configuration.WebAppListener</listener-class>
  </listener>

  <!-- to hook in the spring container -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- to hook in the scope management system that provides scopes like session, request for Servlet 2.4 and Spring 2.0 above  -->
  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>



  <!--
    This typically isn't required, as the taglib is included in webwork.jar.
    If you really need a taglib configuration within web.xml, copy webwork/src/java/META-INF/taglib.tld
    to the WEB-INF directory as webwork.tld.
  -->
  <!--taglib>
    <taglib-uri>webwork</taglib-uri>
    <taglib-location>/WEB-INF/webwork.tld</taglib-location>
    </taglib-->

  <servlet>
    <servlet-name>freemarker</servlet-name>
    <servlet-class>freemarker.ext.servlet.FreemarkerServlet</servlet-class>

    <!-- FreemarkerServlet settings: -->
    <init-param>
      <param-name>TemplatePath</param-name>
      <param-value>/</param-value>
    </init-param>
    <init-param>
      <param-name>NoCache</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>ContentType</param-name>
      <param-value>text/html</param-value>
    </init-param>

    <!-- FreeMarker settings: -->
    <init-param>
      <param-name>template_update_delay</param-name>
      <param-value>0</param-value><!-- 0 is for development only! Use higher value otherwise. -->
    </init-param>
    <init-param>
      <param-name>default_encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>output_encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>number_format</param-name>
      <param-value>0.##########</param-value>
    </init-param>

    <load-on-startup>1</load-on-startup>
  </servlet>


  <servlet>
    <servlet-name>ProxyTicketReceptor</servlet-name>
    <servlet-class>org.plos.cas.proxy.ProxyTicketReceptorWrapper</servlet-class>
    <init-param>
      <param-name>edu.yale.its.tp.cas.proxyUrl</param-name>
      <param-value>https://localhost:7443/cas/proxy</param-value>
    </init-param>
    <!--     <load-on-startup>1</load-on-startup>-->
  </servlet>


  <servlet-mapping>
    <servlet-name>freemarker</servlet-name>
    <url-pattern>*.ftl</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>ProxyTicketReceptor</servlet-name>
    <url-pattern>/CasProxyServlet</url-pattern>
  </servlet-mapping>


  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>


</web-app>
