<?xml version="1.0" encoding="UTF-8"?>
<!--
  $HeadURL::                                                                             $
  $Id$

  Copyright (c) 2006 by Topaz, Inc.
  http://topazproject.org

  Licensed under the Educational Community License version 1.0
  http://opensource.org/licenses/ecl1.php
-->
<project xmlns:artifact="antlib:org.apache.maven.artifact.ant">

  <!-- Define dependencies needed if we want to use <classpath refid="dependency.classpath" />
       in a <java /> task. See antlib: http://maven.apache.org/ant-tasks.html -->
  <artifact:dependencies pathId="dependency.classpath"
      xmlns:artifact="antlib:org.apache.maven.artifact.ant">
    <dependency groupId="ant" artifactId="ant" version="1.6.5"/>
    <dependency groupId="ant" artifactId="ant-launcher" version="1.6.5"/>
  </artifact:dependencies>

  <property environment="env"/>

  <target name="exec-ext">
    <!-- Define extension desired by fedora's scripts -->
    <condition property="ext" value=".sh">
      <os family="unix"/>
    </condition>
    <condition property="ext" value=".bat">
      <os family="windows"/>
    </condition>
    <property name="ext" value=""/>
    <!-- Now find an extension for ant/mvn -->
    <condition property="antext" value="">
      <os family="unix"/>
    </condition>
    <condition property="antext" value=".bat">
      <os family="windows"/>
    </condition>
    <property name="antext" value=""/>
  </target>

  <target name="keytool">
    <condition property="keytool" value="keytool.exe">
      <os family="windows"/>
    </condition>
    <property name="keytool" value="keytool"/>
  </target>


  <target name="fedora-install" depends="exec-ext,keytool">
    <property name="FEDORA_JAR"
      value="${localRepository}/${fedora-groupId}/${fedora-artifactId}/${fedora-version}/${fedora-artifactId}-${fedora-version}.jar"/>
    <property name="MULGARA_WAR"
      value="${localRepository}/${mulgara-service-groupId}/${mulgara-service-artifactId}/${mulgara-service-version}/${mulgara-service-artifactId}-${mulgara-service-version}.war"/>

    <property name="FEDORA_HOME"
      value="${FEDORA_INSTALL_DIR}/fedora-${fedora-version}"/>

    <mkdir dir="${FEDORA_INSTALL_DIR}"/>
    <unjar src="${FEDORA_JAR}" dest="${FEDORA_INSTALL_DIR}"/>
    <chmod perm="u+x">
      <fileset dir="${FEDORA_HOME}">
        <include name="**/bin/*"/>
      </fileset>
    </chmod>
    <exec dir="${FEDORA_HOME}"
      executable="${FEDORA_HOME}/server/bin/mckoi-init${ext}">
      <arg line="fedoraAdmin fedoraAdmin"/>
      <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
    </exec>
    <!-- install CAS server root cert in tomcat keystore -->
    <exec
      dir="${FEDORA_HOME}/server"
      executable="${keytool}">
      <arg line="-export -alias jakarta-tomcat -keystore ${ECQS_KEYSTORE} -file
        ecqs.cert"/>
    </exec>
    <exec
      dir="${FEDORA_HOME}/server"
      executable="${keytool}">
      <arg line="-import -alias jakarta-tomcat -keystore truststore -storepass
        tomcat -file ecqs.cert -noprompt"/>
    </exec>

    <delete file="${FEDORA_HOME}/server/ecqs.cert"/>

    <!-- Install fedoragsearch -->
    <property name="TOMCAT_HOME" value="${FEDORA_HOME}/server/${TOMCAT}"/>
    <filter token="deployFile"
            value="${TOMCAT_HOME}/webapps/fedoragsearch/WEB-INF/classes/config/deploy.wsdd"/>
    <filter token="indexDir" value="${FEDORA_HOME}/data/lucene"/>
    <filter token="fedoraObjectDir" value="${FEDORA_HOME}/data/objects"/>
    <filter token="logDir" value="${FEDORA_HOME}/server/logs"/>
    <filter token="fedoragsearchPath" value="${TOMCAT_HOME}/webapps/fedoragsearch"/>
    <mkdir  dir="${FEDORA_HOME}/data/lucene"/>
    <move todir="${FEDORA_HOME}/data/lucene"
          file="${FEDORA_HOME}/fedoragsearch-topaz/segments"/>
    <move todir="${TOMCAT_HOME}/webapps/fedoragsearch/WEB-INF/classes"
          filtering="true" overwrite="true">
      <fileset dir="${FEDORA_HOME}/fedoragsearch-topaz"/>
    </move>
    
    <!-- Install mulgara-service -->
    <unjar src="${MULGARA_WAR}" dest="${TOMCAT_HOME}/webapps/mulgara"/>
  </target>

  <!-- Runs fedora-install IF the INSTALL propery/config is set - used by fedora-start -->
  <target name="fedora-install-if" if="INSTALL" depends="exec-ext">
    <echo>Installing fedora</echo>
    <!-- Stupid maven-plugin-plugin/maven-plugin-tools-ant - won't let us use <antcall /> -->
    <exec executable="mvn${antext}">
      <arg line="ant-tasks:fedora-install"/>
    </exec>
  </target>
  
  <target name="fedora-start" depends="fedora-start-or-spawn, fedora-if-spawned"/>
  
  <target name="fedora-start-or-spawn" depends="exec-ext, fedora-install-if">
    <echo>Starting mckoi: FEDORA_HOME = ${FEDORA_HOME}</echo>
    <exec dir="${FEDORA_HOME}" 
      executable="${FEDORA_HOME}/server/bin/mckoi-start${ext}"
      spawn="true">
      <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
    </exec>

    <echo>Spawned off mckoi</echo>
    <!-- <sleep seconds="2"/> -->

    <echo>Starting fedora: FEDORA_HOME = ${FEDORA_HOME}</echo>
    <exec dir="${FEDORA_HOME}"
      executable="${FEDORA_HOME}/server/bin/fedora-start${ext}"
      spawn="${SPAWN}">
      <arg line="mckoi"/>
      <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
    </exec>
  </target>

  <target name="fedora-if-spawned" if="SPAWN">
    <echo>Spawned off fedora; sleeping a bit to give it time to really start...</echo>
    <sleep seconds="10"/>
    <echo>Sleep done.</echo>
  </target>

  <target name="fedora-stop" depends="exec-ext">
    <echo>Stopping fedora: FEDORA_HOME = ${FEDORA_HOME}</echo>

    <exec dir="${FEDORA_HOME}" 
      executable="${FEDORA_HOME}/server/bin/fedora-stop${ext}">
      <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
    </exec>

    <echo>Stopping mckoi: FEDORA_HOME = ${FEDORA_HOME}</echo>

    <exec dir="${FEDORA_HOME}"
      executable="${FEDORA_HOME}/server/bin/mckoi-stop${ext}">
      <arg line="fedoraAdmin fedoraAdmin"/>
      <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
    </exec>
  </target>

  <target name="fedora-package" depends="exec-ext">
    <!-- fail if JAVA_HOME is not set -->
    <fail unless="env.JAVA_HOME" message="JAVA_HOME is not set"/>
            
    <!-- untar fedora server distribution -->
    <untar src="${SRC_SERVER_TAR}" dest="${DEST_DIR}"/>

    <!-- untar fedora client distribution -->
    <untar src="${SRC_CLIENT_TAR}" dest="${DEST_DIR}"/>

    <!-- setup execute permissions for bin/* -->
    <chmod perm="u+x">
      <fileset dir="${DEST_DIR}">
        <include name="**/bin/*"/>
      </fileset>
    </chmod>

    <property name="FEDORA_HOME"
      value="${DEST_DIR}/fedora-${VERSION}"/>

    <property name="TOMCAT_HOME"
      value="${FEDORA_HOME}/server/${TOMCAT}"/>

    <!-- execute fedora-setup with no-ssl-authenticate-apim -->
    <exec
      dir="${FEDORA_HOME}"
      executable="${FEDORA_HOME}/server/bin/fedora-setup${ext}">
      <arg line="no-ssl-authenticate-apim"/>
      <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
    </exec>

    <!-- configure fedora (overwrite with our local copy) -->
    <copy file="server/fedora.fcfg"
      tofile="${FEDORA_HOME}/server/config/fedora.fcfg"
      overwrite="true"/>

    <!-- copy xacml policies -->
    <copy todir="${FEDORA_HOME}/data/fedora-xacml-policies" overwrite="true">
      <fileset dir="server/fedora-xacml-policies"/>
    </copy>
    
    <!-- unzip the diringest service -->
    <unzip
      src="${SRC_DIRINGEST_ZIP}"
      dest="${FEDORA_HOME}">
    </unzip>

    <!-- unwar the diringest war file -->
    <unwar
      src="${FEDORA_HOME}/diringest-service/diringest.war"
      dest="${TOMCAT_HOME}/webapps/diringest/">
    </unwar>

    <!-- configure diringest (overwrite with our local copy) -->
    <copy file="diringest/diringest.properties"
      tofile="${TOMCAT_HOME}/webapps/diringest/WEB-INF/classes/diringest.properties"
      overwrite="true"/>

    <!-- unwar fedoragsearch war file -->
    <unwar
      src="fedoragsearch.war"
      dest="${TOMCAT_HOME}/webapps/fedoragsearch">
    </unwar>

    <!-- configure fedoragsearch (overwrite with our local copy) -->
    <copy todir="${FEDORA_HOME}/fedoragsearch-topaz" overwrite="true">
      <fileset dir="fedoragsearch-topaz"/>
    </copy>
    
    <!-- configure CAS -->
    <copy file="CAS/CAS.properties"
      tofile="${TOMCAT_HOME}/server/classes/CAS.properties" overwrite="true"/>

    <copy file="CAS/jaas.config"
      tofile="${TOMCAT_HOME}/conf/jaas.config" overwrite="true"/>

    <!-- copy jar files for CAS-BASIC -->
    <copy file="${CAS_AUTHENTICATOR}" todir="${TOMCAT_HOME}/server/lib"
      overwrite="true" flatten="true"/>

    <copy file="${CAS_CLIENT}" todir="${TOMCAT_HOME}/server/lib"
      overwrite="true" flatten="true"/>

    <!-- make an entry for CAS-BASIC in catalina.jar -->
    <mkdir dir="${TOMCAT_HOME}/catalina-jar-edit"/>
    <unjar src="${TOMCAT_HOME}/server/lib/catalina.jar"
      dest="${TOMCAT_HOME}/catalina-jar-edit"/>
    <echo
      file="${TOMCAT_HOME}/catalina-jar-edit/org/apache/catalina/startup/Authenticators.properties"
      append ="yes"
      message="CAS-BASIC=org.topazproject.tomcat.catalina.authenticator.CASBasicAuthenticator"
      />
    <jar destfile="${TOMCAT_HOME}/server/lib/catalina.jar"
      basedir="${TOMCAT_HOME}/catalina-jar-edit"/>

    <delete dir="${TOMCAT_HOME}/catalina-jar-edit"/>

    <!-- replace BASIC auth with CAS-BASIC -->
    <xslt basedir="${TOMCAT_HOME}/webapps" destdir="${TOMCAT_HOME}/web-xml-temp"
      includes="**/web.xml" style="CAS/web-xml-convert.xslt" extension=".xml"/>

    <copy todir="${TOMCAT_HOME}/webapps" overwrite="yes">
      <fileset dir="${TOMCAT_HOME}/web-xml-temp"/>
    </copy>

    <delete dir="${TOMCAT_HOME}/web-xml-temp"/>

    <!-- Upgrade Kowari to 1.1.0-pre2 -->
    <delete file="${TOMCAT_HOME}/webapps/fedora/WEB-INF/lib/driver-1.0.5.jar"/>
    <delete file="${TOMCAT_HOME}/common/lib/jrdf-0.3.3.jar"/>

    <copy todir="${TOMCAT_HOME}/webapps/fedora/WEB-INF/lib" overwrite="true">
      <fileset dir="server/fedora-lib"/>
    </copy>
    <copy todir="${TOMCAT_HOME}/common/lib" overwrite="true">
      <fileset dir="server/common-lib"/>
    </copy>

    <jar destfile="${TOMCAT_HOME}/webapps/fedora/WEB-INF/lib/trippi.jar" update="true"
         basedir="trippi" includes="**" filesonly="true"/>

    <!-- enable SOAP access to Kowari/Mulgara -->
    <xslt basedir="${TOMCAT_HOME}/webapps/fedora/WEB-INF" destdir="${TOMCAT_HOME}/mulgara-temp"
      includes="web.xml" style="mulgara/web-xml-convert.xslt" extension=".xml"/>
    <xslt basedir="${TOMCAT_HOME}/webapps/fedora/WEB-INF" destdir="${TOMCAT_HOME}/mulgara-temp"
      includes="server-config.wsdd" style="mulgara/server-config-convert.xslt" extension=".wsdd"/>

    <copy todir="${TOMCAT_HOME}/webapps/fedora/WEB-INF" overwrite="yes">
      <fileset dir="${TOMCAT_HOME}/mulgara-temp"/>
    </copy>

    <delete dir="${TOMCAT_HOME}/mulgara-temp"/>

    <copy todir="${FEDORA_HOME}/server/fedora-internal-use/deploy" overwrite="true">
      <fileset dir="server/deploy"/>
    </copy>

    <!-- copy resource-indexer -->
    <copy todir="${TOMCAT_HOME}/webapps/fedora/WEB-INF/lib" overwrite="true" flatten="true" 
      file="${RESOURCE_INDEXER}"/>
    
    <!-- copy/enable filter-resolver -->
    <copy todir="${TOMCAT_HOME}/webapps/fedora/WEB-INF/lib" overwrite="true" flatten="true" 
      file="${FILTER_RESOLVER}"/>

    <jar destfile="${TOMCAT_HOME}/webapps/fedora/WEB-INF/lib/driver-1.1.0.jar" update="true"
         basedir="filter-resolver" includes="**" filesonly="true"/>

    <!-- jar everything up and overwrite the package target created by maven -->
    <jar destfile="${DEST_DIR}.jar" basedir="${DEST_DIR}"/>
  </target>
</project>
