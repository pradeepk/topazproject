<?xml version="1.0" encoding="UTF-8"?>
<!--
  $HeadURL::                                                                             $
  $Id$

  Copyright (c) 2006-2008 by Topaz, Inc.
  http://topazproject.org

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns:artifact="antlib:org.apache.maven.artifact.ant">

  <artifact:dependencies filesetId="antcontrib.fileset" useScope="runtime">
    <dependency groupId="ant-contrib" artifactId="ant-contrib" version="1.0b2"/>
  </artifact:dependencies>

  <taskdef resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <fileset refid="antcontrib.fileset"/>
    </classpath>
  </taskdef>

  <property environment="env"/>

  <target name="exec-ext">
    <!-- Define extension desired by fedora's scripts -->
    <condition property="ext" value=".sh">
      <os family="unix"/>
    </condition>
    <condition property="ext" value=".bat">
      <os family="windows"/>
    </condition>
    <property name="ext" value=""/>
  </target>

  <target name="fedora-install" depends="exec-ext">
    <artifact:dependencies filesetId="fedora.fileset" useScope="runtime">
      <dependency groupId="${fedora-groupId}" artifactId="${fedora-artifactId}"
                  version="${fedora-version}" type="jar"/>
    </artifact:dependencies>
    <pathconvert property="FEDORA_JAR" refid="fedora.fileset"/>

    <property name="FEDORA_HOME" value="${FEDORA_INSTALL_DIR}/${FEDORA_ROOT}"/>

    <mkdir dir="${FEDORA_INSTALL_DIR}"/>
    <unjar src="${FEDORA_JAR}" dest="${FEDORA_INSTALL_DIR}"/>
    <echo>FEDORA_HOME=${FEDORA_HOME}</echo>
    <chmod perm="u+x">
      <fileset dir="${FEDORA_HOME}">
        <include name="**/bin/*"/>
      </fileset>
    </chmod>
    <if>
      <equals arg1="${DB}" arg2="mckoi" casesensitive="false" trim="true"/>
      <then>
        <echo>Starting mckoi: FEDORA_HOME = ${FEDORA_HOME}</echo>
        <exec dir="${FEDORA_HOME}"
          executable="${FEDORA_HOME}/server/bin/mckoi-init${ext}">
          <arg line="fedoraAdmin fedoraAdmin"/>
          <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
        </exec>
      </then>
    </if>
  </target>

  <target name="fedora-start" depends="mckoi-start">
    <property name="FEDORA_HOME"
      value="${FEDORA_INSTALL_DIR}/${FEDORA_ROOT}"/>
    <echo>Starting fedora: FEDORA_HOME = ${FEDORA_HOME}</echo>
    <exec dir="${FEDORA_HOME}"
      executable="${FEDORA_HOME}/server/bin/fedora-start${ext}"
      spawn="${SPAWN}">
      <arg line="${DB}"/>
      <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
    </exec>
    <if>
      <equals arg1="${SPAWN}" arg2="true" casesensitive="false" trim="true"/>
      <then>
        <echo>Spawned off fedora; sleeping a bit to give it time to really start...</echo>
        <sleep seconds="10"/>
        <echo>Sleep done.</echo>
      </then>
    </if>
  </target>

  <target name="mckoi-start" depends="exec-ext">
    <property name="FEDORA_HOME"
      value="${FEDORA_INSTALL_DIR}/${FEDORA_ROOT}"/>
    <if>
      <equals arg1="${DB}" arg2="mckoi" casesensitive="false" trim="true"/>
      <then>
        <echo>Starting mckoi: FEDORA_HOME = ${FEDORA_HOME}</echo>
        <exec dir="${FEDORA_HOME}" 
          executable="${FEDORA_HOME}/server/bin/mckoi-start${ext}"
          spawn="true">
          <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
        </exec>

        <echo>Spawned off mckoi</echo>
        <!-- <sleep seconds="2"/> -->
      </then>
    </if>
  </target>

  <target name="fedora-stop" depends="mckoi-stop"/>

  <target name="--stop-fedora--" depends="exec-ext">
    <property name="FEDORA_HOME"
      value="${FEDORA_INSTALL_DIR}/${FEDORA_ROOT}"/>
    <echo>Stopping fedora: FEDORA_HOME = ${FEDORA_HOME}</echo>
    <exec dir="${FEDORA_HOME}" 
      executable="${FEDORA_HOME}/server/bin/fedora-stop${ext}">
      <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
    </exec>
  </target>

  <target name="mckoi-stop" depends="--stop-fedora--">
    <property name="FEDORA_HOME"
      value="${FEDORA_INSTALL_DIR}/${FEDORA_ROOT}"/>
    <if>
      <equals arg1="${DB}" arg2="mckoi" casesensitive="false" trim="true"/>
      <then>
        <echo>Stopping mckoi: FEDORA_HOME = ${FEDORA_HOME}</echo>
        <exec dir="${FEDORA_HOME}" executable="${FEDORA_HOME}/server/bin/mckoi-stop${ext}">
          <arg line="fedoraAdmin fedoraAdmin"/>
          <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
        </exec>
      </then>
    </if>
  </target>
  
  <target name="fedora-rebuild" depends="mckoi-start">
    <property name="FEDORA_HOME"
      value="${FEDORA_INSTALL_DIR}/${FEDORA_ROOT}"/>
    <if>
      <equals arg1="${FEDORA_REBUILD_FROM}" arg2="${FEDORA_HOME}/data" casesensitive="false" trim="true"/>
      <then>
        <echo>Rebuilding fedora: FEDORA_HOME = ${FEDORA_HOME}</echo>
      </then>
      <else>
        <echo>Replacing objects and datastreams with those from ${FEDORA_REBUILD_FROM}</echo>
        <delete dir="${FEDORA_HOME}/data/datastreams"/>
        <delete dir="${FEDORA_HOME}/data/objects"/>
        <copy todir="${FEDORA_HOME}/data">
          <fileset dir="${FEDORA_REBUILD_FROM}"/>
        </copy>
        <echo>Rebuilding fedora: FEDORA_HOME = ${FEDORA_HOME}</echo>
      </else>
    </if>
    <exec dir="${FEDORA_HOME}" 
      executable="${FEDORA_HOME}/server/bin/fedora-rebuild${ext}"
      input="${FEDORA_REBUILD_STDIN}">
      <arg line="${DB}"/>
      <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
    </exec>
  </target>

  <target name="fedora-package" depends="exec-ext">
    <!-- fail if JAVA_HOME is not set -->
    <fail unless="env.JAVA_HOME" message="JAVA_HOME is not set"/>
            
    <!-- untar fedora server distribution -->
    <antcall target="untar">
      <param name="src_dep" value="${SRC_SERVER_TAR}"/>
      <param name="dst_dir" value="${DEST_DIR}"/>
    </antcall>

    <!-- untar fedora client distribution -->
    <antcall target="untar">
      <param name="src_dep" value="${SRC_CLIENT_TAR}"/>
      <param name="dst_dir" value="${DEST_DIR}"/>
    </antcall>

    <!-- setup execute permissions for bin/* -->
    <chmod perm="u+x">
      <fileset dir="${DEST_DIR}">
        <include name="**/bin/*"/>
      </fileset>
    </chmod>

    <propertyregex property="version" input="${SRC_SERVER_TAR}"
      regexp="[^:]*:[^:]*:(.*)" select="\1" casesensitive="false" override="true"/>
    <property name="FEDORA_HOME" value="${DEST_DIR}/fedora-${version}"/>

    <property name="TOMCAT_HOME" value="${FEDORA_HOME}/server/${TOMCAT}"/>

    <!-- execute fedora-setup with no-ssl-authenticate-apim -->
    <exec
      dir="${FEDORA_HOME}"
      executable="${FEDORA_HOME}/server/bin/fedora-setup${ext}">
      <arg line="no-ssl-authenticate-apim"/>
      <env key="FEDORA_HOME" file="${FEDORA_HOME}"/>
    </exec>

    <!-- configure fedora (overwrite with our local copy) -->
    <copy file="server/fedora.fcfg"
      tofile="${FEDORA_HOME}/server/config/fedora.fcfg"
      overwrite="true"/>

    <copy file="server/fedora.sh"
      tofile="${FEDORA_HOME}/server/bin/fedora.sh"
      overwrite="true"/>

    <!-- configure mckoi (overwrite with our local copy) -->
    <copy file="mckoi1.0.3/db.conf"
      tofile="${FEDORA_HOME}/server/mckoi1.0.3/db.conf"
      overwrite="true"/>
    
    <!-- Get rid of log4j.xml file -->
    <delete file="${TOMCAT_HOME}/common/classes/log4j.xml"/>

    <!-- copy fedora patches -->
    <propertyregex property="groupId" input="${FEDORA_PATCHES}"
      regexp="([^:]*)" select="\1" casesensitive="false" override="true"/>
    <propertyregex property="artifactId" input="${FEDORA_PATCHES}"
      regexp="[^:]*:([^:]*)" select="\1" casesensitive="false" override="true"/>
    <propertyregex property="version" input="${FEDORA_PATCHES}"
      regexp="[^:]*:[^:]*:(.*)" select="\1" casesensitive="false" override="true"/>

    <artifact:dependencies filesetId="patches.fileset" useScope="compile">
      <dependency groupId="${groupId}" artifactId="${artifactId}" version="${version}" type="jar"/>
      <remoteRepository url="${topaz_repository}" />
    </artifact:dependencies>
    <pathconvert property="patches-jar" refid="patches.fileset"/>

    <unjar src="${patches-jar}" 
      dest="${TOMCAT_HOME}/webapps/fedora/WEB-INF/classes" overwrite="true">
      <patternset>
        <exclude name="META-INF/**/*"/>
      </patternset>
    </unjar> 
  </target>

  <target name="untar">
    <propertyregex property="groupId" input="${src_dep}"
      regexp="([^:]*)" select="\1" casesensitive="false" override="true"/>
    <propertyregex property="artifactId" input="${src_dep}"
      regexp="[^:]*:([^:]*)" select="\1" casesensitive="false" override="true"/>
    <propertyregex property="version" input="${src_dep}"
      regexp="[^:]*:[^:]*:(.*)" select="\1" casesensitive="false" override="true"/>

    <artifact:dependencies filesetId="src.fileset" useScope="compile">
      <dependency groupId="${groupId}" artifactId="${artifactId}" version="${version}" type="tar"/>
      <remoteRepository url="${topaz_repository}" />
    </artifact:dependencies>
    <pathconvert property="src-tar" refid="src.fileset"/>

    <untar src="${src-tar}" dest="${dst_dir}"/>
  </target>
</project>
